==列表===
[0mGET /article/list [32m200 [0m697.996 ms - 1724[0m
[0mGET /assets/css/myapp.css [32m200 [0m15.248 ms - 33[0m
[0mGET /assets/js/myapp.js [32m200 [0m15.763 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m17.436 ms - 61923[0m
[0mGET /assets/js/jquery.js [32m200 [0m17.812 ms - 92629[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m15.326 ms - 127352[0m
==列表===
[0mGET /article/list [32m200 [0m765.753 ms - 3906[0m
[0mGET /assets/css/myapp.css [32m200 [0m14.956 ms - 33[0m
[0mGET /assets/js/myapp.js [32m200 [0m9.976 ms - 3321[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m15.569 ms - 127352[0m
[0mGET /assets/js/jquery.js [32m200 [0m17.308 ms - 92629[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m10.182 ms - 61923[0m
[0mGET /article/undefined [33m404 [0m78.293 ms - 2084[0m
[0mGET /article/undefined [33m404 [0m56.396 ms - 2084[0m
[0mGET /article/index [32m200 [0m227.744 ms - 3035[0m
[0mGET /assets/css/myapp.css [32m200 [0m5.423 ms - 33[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m3.896 ms - 127352[0m
[0mGET /assets/js/jquery.js [32m200 [0m5.831 ms - 92629[0m
[0mGET /assets/js/myapp.js [32m200 [0m2.590 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m4.406 ms - 61923[0m
================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3534,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 155141,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 65830,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 23362,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 30262,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 53580 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3534,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 155141,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 65830,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 23362,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 30262,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 53580 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '136',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/javascript, */*; q=0.01',
     origin: 'http://localhost:9000',
     'x-requested-with': 'XMLHttpRequest',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6',
     cookie: 'user=%7B%22loginTime%22%3A%222017-01-04%2000%3A00%3A00%22%2C%22username%22%3A%22zhangsan%22%2C%22userId%22%3A2%2C%22token%22%3A%2253a2b723930a46bea220301218e6faf5%22%2C%22reportServer%22%3A%22http%3A%2F%2F10.10.12.101%22%2C%22orgs%22%3A%5B%7B%22legalOrg%22%3A1%2C%22id%22%3A1%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E7%A7%91%E6%8A%80%22%2C%22code%22%3A%2201%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A2%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5%22%2C%22code%22%3A%2202%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A3%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5-%E5%8D%8E%E5%8C%97%E5%A4%A7%E5%8C%BA%22%2C%22code%22%3A%220201%22%7D%5D%2C%22orgId%22%3A1%7D' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '136',
     'Pragma',
     'no-cache',
     'Cache-Control',
     'no-cache',
     'Accept',
     'application/json, text/javascript, */*; q=0.01',
     'Origin',
     'http://localhost:9000',
     'X-Requested-With',
     'XMLHttpRequest',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6',
     'Cookie',
     'user=%7B%22loginTime%22%3A%222017-01-04%2000%3A00%3A00%22%2C%22username%22%3A%22zhangsan%22%2C%22userId%22%3A2%2C%22token%22%3A%2253a2b723930a46bea220301218e6faf5%22%2C%22reportServer%22%3A%22http%3A%2F%2F10.10.12.101%22%2C%22orgs%22%3A%5B%7B%22legalOrg%22%3A1%2C%22id%22%3A1%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E7%A7%91%E6%8A%80%22%2C%22code%22%3A%2201%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A2%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5%22%2C%22code%22%3A%2202%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A3%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5-%E5%8D%8E%E5%8C%97%E5%A4%A7%E5%8C%BA%22%2C%22code%22%3A%220201%22%7D%5D%2C%22orgId%22%3A1%7D' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/add',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3534,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 155141,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 65830,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 23362,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 30262,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 53580 } },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/add',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/add',
     path: '/article/add',
     href: '/article/add',
     _raw: '/article/add' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 155141,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 30262,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 155141,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 30262,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 14790, 189622933 ],
  _startTime: 2017-01-05T06:33:25.288Z,
  _remoteAddress: '::1',
  body: { params: '{"title":"rrr","author":"","type":3,"content":"rerrrrrrrrrrr","img":""}' },
  _body: true,
  length: undefined,
  read: [Function],
  secret: undefined,
  cookies: { user: '{"loginTime":"2017-01-04 00:00:00","username":"zhangsan","userId":2,"token":"53a2b723930a46bea220301218e6faf5","reportServer":"http://10.10.12.101","orgs":[{"legalOrg":1,"id":1,"name":"星空科技","code":"01"},{"legalOrg":1,"id":2,"name":"星空光电","code":"02"},{"legalOrg":1,"id":3,"name":"星空光电-华北大区","code":"0201"}],"orgId":1}' },
  signedCookies: {},
  route: 
   Route {
     path: '/article/add',
     stack: [ [Object] ],
     methods: { post: true } } }
{ title: 'rrr',
  author: '',
  type: 3,
  content: 'rerrrrrrrrrrr',
  img: '' }
----- { result: { ok: 1, n: 1 },
  ops: 
   [ { title: 'rrr',
       author: '',
       type: 3,
       content: 'rerrrrrrrrrrr',
       img: '',
       _id: 586de8b55b7ab728203be5c4 } ],
  insertedCount: 1,
  insertedIds: [ 586de8b55b7ab728203be5c4 ] }
[0mPOST /article/add [32m200 [0m129.972 ms - 11[0m
==列表===
[0mGET /article/list [32m200 [0m218.997 ms - 4380[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m3.450 ms - 127352[0m
[0mGET /assets/css/myapp.css [32m200 [0m8.378 ms - 33[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m4.303 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m4.986 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m6.077 ms - 92629[0m
[0mGET /article/undefined [33m404 [0m54.979 ms - 2084[0m
[0mGET /article/undefined [33m404 [0m46.610 ms - 2084[0m
==列表===
[0mGET /article/list [32m200 [0m701.335 ms - 1724[0m
[0mGET /assets/css/myapp.css [32m200 [0m23.911 ms - 33[0m
[0mGET /assets/js/myapp.js [32m200 [0m17.304 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m17.157 ms - 61923[0m
[0mGET /assets/js/jquery.js [32m200 [0m26.869 ms - 92629[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m24.842 ms - 127352[0m
==列表===
[0mGET /article/list [32m200 [0m112.721 ms - 1724[0m
[0mGET /assets/css/myapp.css [32m200 [0m4.256 ms - 33[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m3.176 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m4.545 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m4.042 ms - 92629[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m9.605 ms - 127352[0m
586de613dad5f524281a7d77
----- 删除 { result: { ok: 1, n: 1 },
  connection: 
   EventEmitter {
     domain: null,
     _events: 
      { error: [Object],
        close: [Object],
        timeout: [Object],
        parseError: [Object] },
     _eventsCount: 4,
     _maxListeners: undefined,
     options: 
      { host: '127.0.0.1',
        port: 27017,
        size: 5,
        connectionTimeout: 30000,
        socketTimeout: 30000,
        keepAlive: true,
        keepAliveInitialDelay: 0,
        noDelay: true,
        ssl: false,
        checkServerIdentity: true,
        ca: null,
        cert: null,
        key: null,
        passPhrase: null,
        rejectUnauthorized: false,
        promoteLongs: true,
        promoteValues: true,
        promoteBuffers: false,
        reconnect: true,
        reconnectInterval: 1000,
        reconnectTries: 30,
        domainsEnabled: false,
        disconnectHandler: [Object],
        cursorFactory: [Object],
        emitError: true,
        socketOptions: {},
        clientInfo: [Object],
        readPreference: [Object],
        promiseLibrary: [Function: Promise],
        bson: {} },
     id: 0,
     logger: { className: 'Connection' },
     bson: {},
     tag: undefined,
     messageHandler: [Function],
     maxBsonMessageSize: 67108864,
     port: 27017,
     host: '127.0.0.1',
     keepAlive: true,
     keepAliveInitialDelay: 0,
     noDelay: true,
     connectionTimeout: 30000,
     socketTimeout: 30000,
     destroyed: false,
     domainSocket: false,
     singleBufferSerializtion: true,
     serializationFunction: 'toBinUnified',
     ca: null,
     cert: null,
     key: null,
     passphrase: null,
     ssl: false,
     rejectUnauthorized: false,
     checkServerIdentity: true,
     responseOptions: 
      { promoteLongs: true,
        promoteValues: true,
        promoteBuffers: false },
     flushing: false,
     queue: [],
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        _bytesDispatched: 709,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        _idleTimeout: 30000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 29438,
        read: [Function],
        _consuming: true },
     writeStream: null,
     hashedName: '1af0a80ead1d9e3c1a02ad090ffe77ff1334aae9',
     workItems: [],
     buffer: null,
     sizeOfMessage: 0,
     bytesRead: 0,
     stubBuffer: null },
  message: 
   { parsed: true,
     index: 56,
     raw: <Buffer 38 00 00 00 80 00 00 00 08 00 00 00 01 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 14 00 00 00 10 6f 6b 00 01 00 00 00 10 6e ... >,
     data: <Buffer 38 00 00 00 80 00 00 00 08 00 00 00 01 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 14 00 00 00 10 6f 6b 00 01 00 00 00 10 6e ... >,
     bson: {},
     opts: 
      { promoteLongs: true,
        promoteValues: true,
        promoteBuffers: false },
     length: 56,
     requestId: 128,
     responseTo: 8,
     responseFlags: 8,
     cursorId: Long { _bsontype: 'Long', low_: 0, high_: 0 },
     startingFrom: 0,
     numberReturned: 1,
     documents: [ [Object] ],
     cursorNotFound: false,
     queryFailure: false,
     shardConfigStale: false,
     awaitCapable: true,
     promoteLongs: true,
     promoteValues: true,
     promoteBuffers: false,
     hashedName: '1af0a80ead1d9e3c1a02ad090ffe77ff1334aae9' } }
[0mPOST /article/remove [32m200 [0m78.816 ms - 11[0m
==列表===
[0mGET /article/list [32m200 [0m206.169 ms - 1250[0m
[0mGET /assets/css/myapp.css [32m200 [0m3.644 ms - 33[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m6.619 ms - 127352[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m3.976 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m3.251 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m5.822 ms - 92629[0m
[0mGET /article/index [32m200 [0m112.098 ms - 3035[0m
[0mGET /assets/css/myapp.css [32m200 [0m6.803 ms - 33[0m
[0mGET /assets/js/jquery.js [32m200 [0m7.310 ms - 92629[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m11.582 ms - 127352[0m
[0mGET /assets/js/myapp.js [32m200 [0m10.359 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m10.049 ms - 61923[0m
================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 5716,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 128370,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 226436,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 32602,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 42549,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 53779 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 5716,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 128370,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 226436,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 32602,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 42549,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 53779 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '158',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/javascript, */*; q=0.01',
     origin: 'http://localhost:9000',
     'x-requested-with': 'XMLHttpRequest',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6',
     cookie: 'user=%7B%22loginTime%22%3A%222017-01-04%2000%3A00%3A00%22%2C%22username%22%3A%22zhangsan%22%2C%22userId%22%3A2%2C%22token%22%3A%2253a2b723930a46bea220301218e6faf5%22%2C%22reportServer%22%3A%22http%3A%2F%2F10.10.12.101%22%2C%22orgs%22%3A%5B%7B%22legalOrg%22%3A1%2C%22id%22%3A1%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E7%A7%91%E6%8A%80%22%2C%22code%22%3A%2201%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A2%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5%22%2C%22code%22%3A%2202%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A3%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5-%E5%8D%8E%E5%8C%97%E5%A4%A7%E5%8C%BA%22%2C%22code%22%3A%220201%22%7D%5D%2C%22orgId%22%3A1%7D' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '158',
     'Pragma',
     'no-cache',
     'Cache-Control',
     'no-cache',
     'Accept',
     'application/json, text/javascript, */*; q=0.01',
     'Origin',
     'http://localhost:9000',
     'X-Requested-With',
     'XMLHttpRequest',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6',
     'Cookie',
     'user=%7B%22loginTime%22%3A%222017-01-04%2000%3A00%3A00%22%2C%22username%22%3A%22zhangsan%22%2C%22userId%22%3A2%2C%22token%22%3A%2253a2b723930a46bea220301218e6faf5%22%2C%22reportServer%22%3A%22http%3A%2F%2F10.10.12.101%22%2C%22orgs%22%3A%5B%7B%22legalOrg%22%3A1%2C%22id%22%3A1%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E7%A7%91%E6%8A%80%22%2C%22code%22%3A%2201%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A2%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5%22%2C%22code%22%3A%2202%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A3%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5-%E5%8D%8E%E5%8C%97%E5%A4%A7%E5%8C%BA%22%2C%22code%22%3A%220201%22%7D%5D%2C%22orgId%22%3A1%7D' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/add',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 5716,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 128370,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 226436,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 32602,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 42549,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 53779 } },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/add',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/add',
     path: '/article/add',
     href: '/article/add',
     _raw: '/article/add' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 128370,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 42549,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 128370,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 42549,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 15065, 687482971 ],
  _startTime: 2017-01-05T06:38:00.788Z,
  _remoteAddress: '::1',
  body: { params: '{"title":"rrgggg","author":"","type":3,"content":"we444444444444444444443444444444","img":""}' },
  _body: true,
  length: undefined,
  read: [Function],
  secret: undefined,
  cookies: { user: '{"loginTime":"2017-01-04 00:00:00","username":"zhangsan","userId":2,"token":"53a2b723930a46bea220301218e6faf5","reportServer":"http://10.10.12.101","orgs":[{"legalOrg":1,"id":1,"name":"星空科技","code":"01"},{"legalOrg":1,"id":2,"name":"星空光电","code":"02"},{"legalOrg":1,"id":3,"name":"星空光电-华北大区","code":"0201"}],"orgId":1}' },
  signedCookies: {},
  route: 
   Route {
     path: '/article/add',
     stack: [ [Object] ],
     methods: { post: true } } }
{ title: 'rrgggg',
  author: '',
  type: 3,
  content: 'we444444444444444444443444444444',
  img: '' }
----- { result: { ok: 1, n: 1 },
  ops: 
   [ { title: 'rrgggg',
       author: '',
       type: 3,
       content: 'we444444444444444444443444444444',
       img: '',
       _id: 586de9c89363c323605fb8eb } ],
  insertedCount: 1,
  insertedIds: [ 586de9c89363c323605fb8eb ] }
[0mPOST /article/add [32m200 [0m70.403 ms - 11[0m
==列表===
[0mGET /article/list [32m200 [0m185.251 ms - 1727[0m
[0mGET /assets/css/myapp.css [32m200 [0m9.918 ms - 33[0m
[0mGET /assets/js/jquery.js [32m200 [0m11.224 ms - 92629[0m
[0mGET /assets/js/myapp.js [32m200 [0m10.215 ms - 3321[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m9.541 ms - 127352[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m10.326 ms - 61923[0m
==列表===
[0mGET /article/list [32m200 [0m192.733 ms - 1727[0m
[0mGET /assets/css/myapp.css [32m200 [0m13.213 ms - 33[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m5.828 ms - 61923[0m
[0mGET /assets/js/jquery.js [32m200 [0m6.543 ms - 92629[0m
[0mGET /assets/js/myapp.js [32m200 [0m4.290 ms - 3321[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m14.015 ms - 127352[0m
[0mGET /article/index [32m200 [0m85.552 ms - 3035[0m
[0mGET /assets/css/myapp.css [32m200 [0m6.497 ms - 33[0m
[0mGET /assets/js/myapp.js [32m200 [0m4.666 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m5.554 ms - 61923[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m9.028 ms - 127352[0m
[0mGET /assets/js/jquery.js [32m200 [0m5.302 ms - 92629[0m
================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 14900,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 798133,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 225230,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 226059,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 232772,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 53778 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 14900,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 798133,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 225230,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 226059,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 232772,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 53778 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '126',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/javascript, */*; q=0.01',
     origin: 'http://localhost:9000',
     'x-requested-with': 'XMLHttpRequest',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6',
     cookie: 'user=%7B%22loginTime%22%3A%222017-01-04%2000%3A00%3A00%22%2C%22username%22%3A%22zhangsan%22%2C%22userId%22%3A2%2C%22token%22%3A%2253a2b723930a46bea220301218e6faf5%22%2C%22reportServer%22%3A%22http%3A%2F%2F10.10.12.101%22%2C%22orgs%22%3A%5B%7B%22legalOrg%22%3A1%2C%22id%22%3A1%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E7%A7%91%E6%8A%80%22%2C%22code%22%3A%2201%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A2%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5%22%2C%22code%22%3A%2202%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A3%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5-%E5%8D%8E%E5%8C%97%E5%A4%A7%E5%8C%BA%22%2C%22code%22%3A%220201%22%7D%5D%2C%22orgId%22%3A1%7D' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '126',
     'Pragma',
     'no-cache',
     'Cache-Control',
     'no-cache',
     'Accept',
     'application/json, text/javascript, */*; q=0.01',
     'Origin',
     'http://localhost:9000',
     'X-Requested-With',
     'XMLHttpRequest',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6',
     'Cookie',
     'user=%7B%22loginTime%22%3A%222017-01-04%2000%3A00%3A00%22%2C%22username%22%3A%22zhangsan%22%2C%22userId%22%3A2%2C%22token%22%3A%2253a2b723930a46bea220301218e6faf5%22%2C%22reportServer%22%3A%22http%3A%2F%2F10.10.12.101%22%2C%22orgs%22%3A%5B%7B%22legalOrg%22%3A1%2C%22id%22%3A1%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E7%A7%91%E6%8A%80%22%2C%22code%22%3A%2201%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A2%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5%22%2C%22code%22%3A%2202%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A3%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5-%E5%8D%8E%E5%8C%97%E5%A4%A7%E5%8C%BA%22%2C%22code%22%3A%220201%22%7D%5D%2C%22orgId%22%3A1%7D' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/add',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 14900,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 798133,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 225230,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 226059,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 232772,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 53778 } },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/add',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/add',
     path: '/article/add',
     href: '/article/add',
     _raw: '/article/add' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 798133,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 232772,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 798133,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 232772,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 15255, 910392181 ],
  _startTime: 2017-01-05T06:41:11.013Z,
  _remoteAddress: '::1',
  body: { params: '{"title":"sas","author":"","type":3,"content":"sas","img":""}' },
  _body: true,
  length: undefined,
  read: [Function],
  secret: undefined,
  cookies: { user: '{"loginTime":"2017-01-04 00:00:00","username":"zhangsan","userId":2,"token":"53a2b723930a46bea220301218e6faf5","reportServer":"http://10.10.12.101","orgs":[{"legalOrg":1,"id":1,"name":"星空科技","code":"01"},{"legalOrg":1,"id":2,"name":"星空光电","code":"02"},{"legalOrg":1,"id":3,"name":"星空光电-华北大区","code":"0201"}],"orgId":1}' },
  signedCookies: {},
  route: 
   Route {
     path: '/article/add',
     stack: [ [Object] ],
     methods: { post: true } } }
{ title: 'sas', author: '', type: 3, content: 'sas', img: '' }
----- { result: { ok: 1, n: 1 },
  ops: 
   [ { title: 'sas',
       author: '',
       type: 3,
       content: 'sas',
       img: '',
       _id: 586dea879363c323605fb8ec } ],
  insertedCount: 1,
  insertedIds: [ 586dea879363c323605fb8ec ] }
[0mPOST /article/add [32m200 [0m44.531 ms - 11[0m
==列表===
[0mGET /article/list [32m200 [0m80.167 ms - 2201[0m
[0mGET /assets/css/myapp.css [32m200 [0m5.777 ms - 33[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m5.122 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m5.883 ms - 3321[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m8.650 ms - 127352[0m
[0mGET /assets/js/jquery.js [32m200 [0m5.431 ms - 92629[0m
++++++++++++++ { id: '586de9c89363c323605fb8eb' }
----- 详情 { _id: 586de9c89363c323605fb8eb,
  title: 'rrgggg',
  author: '',
  type: 3,
  content: 'we444444444444444444443444444444',
  img: '' }
[0mGET /article/detail?id=586de9c89363c323605fb8eb [32m200 [0m57.681 ms - 2116[0m
[0mGET /assets/css/myapp.css [32m200 [0m6.861 ms - 33[0m
[0mGET /assets/js/jquery.js [32m200 [0m4.803 ms - 92629[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m7.348 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m6.722 ms - 3321[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m7.758 ms - 127352[0m
[0mPOST /comment/add [32m200 [0m2.372 ms - 11[0m
++++++++++++++ { id: '586de9c89363c323605fb8eb' }
----- 详情 { _id: 586de9c89363c323605fb8eb,
  title: 'rrgggg',
  author: '',
  type: 3,
  content: 'we444444444444444444443444444444',
  img: '' }
评论列表 []
[0mGET /article/detail?id=586de9c89363c323605fb8eb [32m200 [0m839.229 ms - 2116[0m
[0mGET /assets/css/myapp.css [32m200 [0m14.050 ms - 33[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m15.914 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m16.492 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m18.661 ms - 92629[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m21.389 ms - 127352[0m
++++++++++++++ { id: '586de9c89363c323605fb8eb' }
----- 详情 { _id: 586de9c89363c323605fb8eb,
  title: 'rrgggg',
  author: '',
  type: 3,
  content: 'we444444444444444444443444444444',
  img: '' }
评论列表 [ { _id: 586de623dad5f524281a7d78,
    arId: '586de613dad5f524281a7d77' },
  { _id: 586de62cdad5f524281a7d79,
    arId: '586de613dad5f524281a7d77' },
  { _id: 586dea959363c323605fb8ed,
    arId: '586de9c89363c323605fb8eb' } ]
[0mGET /article/detail?id=586de9c89363c323605fb8eb [32m200 [0m787.945 ms - 2116[0m
[0mGET /assets/css/myapp.css [32m200 [0m17.347 ms - 33[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m18.205 ms - 127352[0m
[0mGET /assets/js/myapp.js [32m200 [0m14.060 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m15.212 ms - 61923[0m
[0mGET /assets/js/jquery.js [32m200 [0m16.267 ms - 92629[0m
++++++++++++++ { id: '586de9c89363c323605fb8eb' }
----- 详情 { _id: 586de9c89363c323605fb8eb,
  title: 'rrgggg',
  author: '',
  type: 3,
  content: 'we444444444444444444443444444444',
  img: '' }
评论列表 [ { _id: 586de623dad5f524281a7d78,
    arId: '586de613dad5f524281a7d77',
    nick: 'ee',
    content: 'ee',
    createTime: '1483597347044' },
  { _id: 586de62cdad5f524281a7d79,
    arId: '586de613dad5f524281a7d77',
    nick: 'ee',
    content: 'ee',
    createTime: '1483597356113' },
  { _id: 586dea959363c323605fb8ed,
    arId: '586de9c89363c323605fb8eb',
    nick: 'sas',
    content: 'sa',
    createTime: '1483598485474' } ]
[0mGET /article/detail?id=586de9c89363c323605fb8eb [32m200 [0m707.642 ms - 2116[0m
[0mGET /assets/css/myapp.css [32m200 [0m21.365 ms - 33[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m21.051 ms - 127352[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m12.482 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m12.230 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m13.773 ms - 92629[0m
++++++++++++++ { id: '586de9c89363c323605fb8eb' }
----- 详情 { _id: 586de9c89363c323605fb8eb,
  title: 'rrgggg',
  author: '',
  type: 3,
  content: 'we444444444444444444443444444444',
  img: '' }
评论列表 [ { _id: 586dea959363c323605fb8ed,
    arId: '586de9c89363c323605fb8eb',
    nick: 'sas',
    content: 'sa',
    createTime: '1483598485474' } ]
[0mGET /article/detail?id=586de9c89363c323605fb8eb [32m200 [0m684.467 ms - 2116[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m14.732 ms - 127352[0m
[0mGET /assets/css/myapp.css [32m200 [0m15.620 ms - 33[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m4.522 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m4.874 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m6.198 ms - 92629[0m
[0mPOST /comment/add [32m200 [0m46.659 ms - 11[0m
++++++++++++++ { id: '586de9c89363c323605fb8eb' }
----- 详情 { _id: 586de9c89363c323605fb8eb,
  title: 'rrgggg',
  author: '',
  type: 3,
  content: 'we444444444444444444443444444444',
  img: '' }
评论列表 [ { _id: 586dea959363c323605fb8ed,
    arId: '586de9c89363c323605fb8eb',
    nick: 'sas',
    content: 'sa',
    createTime: '1483598485474' },
  { _id: 586decbded9ac61ed43a63ed,
    arId: '586de9c89363c323605fb8eb',
    nick: 'wqw',
    content: 'wqwqwq',
    createTime: '1483599037183' } ]
[0mGET /article/detail?id=586de9c89363c323605fb8eb [32m200 [0m218.603 ms - 2116[0m
[0mGET /assets/css/myapp.css [32m200 [0m4.353 ms - 33[0m
[0mGET /assets/js/myapp.js [32m200 [0m5.272 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m6.579 ms - 61923[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m8.149 ms - 127352[0m
[0mGET /assets/js/jquery.js [32m200 [0m6.656 ms - 92629[0m
[0mGET /article/index [32m200 [0m220.813 ms - 3035[0m
[0mGET /assets/css/myapp.css [32m200 [0m3.284 ms - 33[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m3.520 ms - 127352[0m
[0mGET /assets/js/jquery.js [32m200 [0m4.898 ms - 92629[0m
[0mGET /assets/js/myapp.js [32m200 [0m2.204 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m10.970 ms - 61923[0m
上传================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 2276,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 62217,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 92924,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 207881,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 207886,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 54505 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 2276,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 62217,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 92924,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 207881,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 207886,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 54505 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '164587',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     origin: 'http://localhost:9000',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryBkC6gnpVdW8VsGNc',
     accept: '*/*',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6',
     cookie: 'user=%7B%22loginTime%22%3A%222017-01-04%2000%3A00%3A00%22%2C%22username%22%3A%22zhangsan%22%2C%22userId%22%3A2%2C%22token%22%3A%2253a2b723930a46bea220301218e6faf5%22%2C%22reportServer%22%3A%22http%3A%2F%2F10.10.12.101%22%2C%22orgs%22%3A%5B%7B%22legalOrg%22%3A1%2C%22id%22%3A1%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E7%A7%91%E6%8A%80%22%2C%22code%22%3A%2201%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A2%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5%22%2C%22code%22%3A%2202%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A3%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5-%E5%8D%8E%E5%8C%97%E5%A4%A7%E5%8C%BA%22%2C%22code%22%3A%220201%22%7D%5D%2C%22orgId%22%3A1%7D' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '164587',
     'Pragma',
     'no-cache',
     'Cache-Control',
     'no-cache',
     'Origin',
     'http://localhost:9000',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'multipart/form-data; boundary=----WebKitFormBoundaryBkC6gnpVdW8VsGNc',
     'Accept',
     '*/*',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6',
     'Cookie',
     'user=%7B%22loginTime%22%3A%222017-01-04%2000%3A00%3A00%22%2C%22username%22%3A%22zhangsan%22%2C%22userId%22%3A2%2C%22token%22%3A%2253a2b723930a46bea220301218e6faf5%22%2C%22reportServer%22%3A%22http%3A%2F%2F10.10.12.101%22%2C%22orgs%22%3A%5B%7B%22legalOrg%22%3A1%2C%22id%22%3A1%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E7%A7%91%E6%8A%80%22%2C%22code%22%3A%2201%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A2%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5%22%2C%22code%22%3A%2202%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A3%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5-%E5%8D%8E%E5%8C%97%E5%A4%A7%E5%8C%BA%22%2C%22code%22%3A%220201%22%7D%5D%2C%22orgId%22%3A1%7D' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 2276,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 62217,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 92924,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 207881,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 207886,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 54505 } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/upload',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/upload',
     path: '/article/upload',
     href: '/article/upload',
     _raw: '/article/upload' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 62217,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 207886,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 62217,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 207886,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 16074, 911366757 ],
  _startTime: 2017-01-05T06:54:50.021Z,
  _remoteAddress: '::1',
  body: {},
  secret: undefined,
  cookies: { user: '{"loginTime":"2017-01-04 00:00:00","username":"zhangsan","userId":2,"token":"53a2b723930a46bea220301218e6faf5","reportServer":"http://10.10.12.101","orgs":[{"legalOrg":1,"id":1,"name":"星空科技","code":"01"},{"legalOrg":1,"id":2,"name":"星空光电","code":"02"},{"legalOrg":1,"id":3,"name":"星空光电-华北大区","code":"0201"}],"orgId":1}' },
  signedCookies: {},
  route: 
   Route {
     path: '/article/upload',
     stack: [ [Object] ],
     methods: { post: true } } }
========== {} { myfile: 
   File {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     size: 164388,
     path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_2fa1dae71f3b5fc44608f8849ab15b49',
     name: '6632113401257877779.jpg',
     type: 'image/jpeg',
     hash: null,
     lastModifiedDate: 2017-01-05T06:54:50.081Z,
     _writeStream: 
      WriteStream {
        _writableState: [Object],
        writable: false,
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_2fa1dae71f3b5fc44608f8849ab15b49',
        fd: null,
        flags: 'w',
        mode: 438,
        start: undefined,
        autoClose: true,
        pos: undefined,
        bytesWritten: 164388,
        closed: true } } }
[0mPOST /article/upload [32m200 [0m70.877 ms - 44[0m
[0mGET /upload/14835992900846632113401257877779.jpg [32m200 [0m12.176 ms - 164388[0m
================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3316,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 164672,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1310,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2877,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 54553 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3316,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 164672,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1310,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2877,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 54553 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '943',
     pragma: 'no-cache',
     'cache-control': 'no-cache',
     accept: 'application/json, text/javascript, */*; q=0.01',
     origin: 'http://localhost:9000',
     'x-requested-with': 'XMLHttpRequest',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6',
     cookie: 'user=%7B%22loginTime%22%3A%222017-01-04%2000%3A00%3A00%22%2C%22username%22%3A%22zhangsan%22%2C%22userId%22%3A2%2C%22token%22%3A%2253a2b723930a46bea220301218e6faf5%22%2C%22reportServer%22%3A%22http%3A%2F%2F10.10.12.101%22%2C%22orgs%22%3A%5B%7B%22legalOrg%22%3A1%2C%22id%22%3A1%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E7%A7%91%E6%8A%80%22%2C%22code%22%3A%2201%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A2%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5%22%2C%22code%22%3A%2202%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A3%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5-%E5%8D%8E%E5%8C%97%E5%A4%A7%E5%8C%BA%22%2C%22code%22%3A%220201%22%7D%5D%2C%22orgId%22%3A1%7D' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '943',
     'Pragma',
     'no-cache',
     'Cache-Control',
     'no-cache',
     'Accept',
     'application/json, text/javascript, */*; q=0.01',
     'Origin',
     'http://localhost:9000',
     'X-Requested-With',
     'XMLHttpRequest',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6',
     'Cookie',
     'user=%7B%22loginTime%22%3A%222017-01-04%2000%3A00%3A00%22%2C%22username%22%3A%22zhangsan%22%2C%22userId%22%3A2%2C%22token%22%3A%2253a2b723930a46bea220301218e6faf5%22%2C%22reportServer%22%3A%22http%3A%2F%2F10.10.12.101%22%2C%22orgs%22%3A%5B%7B%22legalOrg%22%3A1%2C%22id%22%3A1%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E7%A7%91%E6%8A%80%22%2C%22code%22%3A%2201%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A2%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5%22%2C%22code%22%3A%2202%22%7D%2C%7B%22legalOrg%22%3A1%2C%22id%22%3A3%2C%22name%22%3A%22%E6%98%9F%E7%A9%BA%E5%85%89%E7%94%B5-%E5%8D%8E%E5%8C%97%E5%A4%A7%E5%8C%BA%22%2C%22code%22%3A%220201%22%7D%5D%2C%22orgId%22%3A1%7D' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/add',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3316,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 164672,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1310,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2877,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 54553 } },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/add',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/add',
     path: '/article/add',
     href: '/article/add',
     _raw: '/article/add' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 164672,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 2877,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 164672,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 2877,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 16077, 941628535 ],
  _startTime: 2017-01-05T06:54:53.052Z,
  _remoteAddress: '::1',
  body: { params: '{"title":"长城的美永远会超出你的想象","author":"大狗","type":3,"content":"攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\\n      是的，慕田峪长城的美永远会超出你的想象。","img":"/upload/14835992900846632113401257877779.jpg"}' },
  _body: true,
  length: undefined,
  read: [Function],
  secret: undefined,
  cookies: { user: '{"loginTime":"2017-01-04 00:00:00","username":"zhangsan","userId":2,"token":"53a2b723930a46bea220301218e6faf5","reportServer":"http://10.10.12.101","orgs":[{"legalOrg":1,"id":1,"name":"星空科技","code":"01"},{"legalOrg":1,"id":2,"name":"星空光电","code":"02"},{"legalOrg":1,"id":3,"name":"星空光电-华北大区","code":"0201"}],"orgId":1}' },
  signedCookies: {},
  route: 
   Route {
     path: '/article/add',
     stack: [ [Object] ],
     methods: { post: true } } }
{ title: '长城的美永远会超出你的想象',
  author: '大狗',
  type: 3,
  content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
  img: '/upload/14835992900846632113401257877779.jpg' }
----- { result: { ok: 1, n: 1 },
  ops: 
   [ { title: '长城的美永远会超出你的想象',
       author: '大狗',
       type: 3,
       content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
       img: '/upload/14835992900846632113401257877779.jpg',
       _id: 586dedbd5505a828f02af177 } ],
  insertedCount: 1,
  insertedIds: [ 586dedbd5505a828f02af177 ] }
[0mPOST /article/add [32m200 [0m144.085 ms - 11[0m
==列表===
[0mGET /article/list [32m200 [0m677.764 ms - 2755[0m
[0mGET /assets/css/myapp.css [32m200 [0m10.061 ms - 33[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m6.824 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m7.088 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m7.699 ms - 92629[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m14.504 ms - 127352[0m
[0mGET /upload/14835992900846632113401257877779.jpg [32m200 [0m7.234 ms - 164388[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 []
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m693.769 ms - 2093[0m
[0mGET /assets/css/myapp.css [32m200 [0m15.292 ms - 33[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m17.190 ms - 127352[0m
[0mGET /assets/js/myapp.js [32m200 [0m9.253 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m17.090 ms - 92629[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m9.694 ms - 61923[0m
[0mPOST /comment/add [32m200 [0m36.179 ms - 11[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m166.571 ms - 2111[0m
[0mGET /assets/css/myapp.css [32m200 [0m2.389 ms - 33[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m2.328 ms - 61923[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m2.779 ms - 127352[0m
[0mGET /assets/js/jquery.js [32m200 [0m8.627 ms - 92629[0m
[0mGET /assets/js/myapp.js [32m200 [0m3.736 ms - 3321[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m719.194 ms - 2129[0m
[0mGET /assets/css/myapp.css [32m200 [0m14.857 ms - 33[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m16.805 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m17.182 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m17.914 ms - 92629[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m16.825 ms - 127352[0m
[0mPOST /comment/add [32m200 [0m41.179 ms - 11[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m188.914 ms - 2165[0m
[0mGET /assets/css/myapp.css [32m200 [0m6.356 ms - 33[0m
[0mGET /assets/js/jquery.js [32m200 [0m1.949 ms - 92629[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m7.020 ms - 127352[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m3.774 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m3.915 ms - 3321[0m
==列表===
[0mGET /article/list [32m200 [0m85.413 ms - 2755[0m
[0mGET /assets/css/myapp.css [32m200 [0m4.467 ms - 33[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m8.160 ms - 127352[0m
[0mGET /assets/js/jquery.js [32m200 [0m4.615 ms - 92629[0m
[0mGET /assets/js/myapp.js [32m200 [0m7.045 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m6.726 ms - 61923[0m
[0mGET /upload/14835992900846632113401257877779.jpg [32m200 [0m1.087 ms - 164388[0m
==列表===
[0mGET /article/list [32m200 [0m690.294 ms - 2755[0m
[0mGET /assets/css/myapp.css [32m200 [0m17.374 ms - 33[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m28.511 ms - 127352[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m22.297 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m6.653 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m28.770 ms - 92629[0m
[0mGET /upload/14835992900846632113401257877779.jpg [32m200 [0m2.594 ms - 164388[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m138.720 ms - 2267[0m
[0mGET /assets/css/myapp.css [32m200 [0m3.250 ms - 33[0m
[0mGET /assets/js/jquery.js [32m200 [0m2.182 ms - 92629[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m5.276 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m3.563 ms - 3321[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m12.397 ms - 127352[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [31m500 [0m781.113 ms - 3045[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m22.492 ms - 127352[0m
[0mGET /assets/css/myapp.css [32m200 [0m12.669 ms - 33[0m
[0mGET /assets/js/myapp.js [32m200 [0m9.694 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m10.822 ms - 61923[0m
[0mGET /assets/js/jquery.js [32m200 [0m11.555 ms - 92629[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m736.596 ms - 2267[0m
[0mGET /assets/css/myapp.css [32m200 [0m18.558 ms - 33[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m16.287 ms - 127352[0m
[0mGET /assets/js/myapp.js [32m200 [0m15.949 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m23.891 ms - 92629[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m17.867 ms - 61923[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m713.859 ms - 2267[0m
[0mGET /assets/css/myapp.css [32m200 [0m18.454 ms - 124[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m15.678 ms - 127352[0m
[0mGET /assets/js/myapp.js [32m200 [0m33.073 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m34.162 ms - 61923[0m
[0mGET /assets/js/jquery.js [32m200 [0m29.776 ms - 92629[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m773.601 ms - 2411[0m
[0mGET /assets/css/myapp.css [32m200 [0m17.952 ms - 144[0m
[0mGET /assets/js/myapp.js [32m200 [0m13.171 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m14.374 ms - 61923[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m18.262 ms - 127352[0m
[0mGET /assets/js/jquery.js [32m200 [0m15.438 ms - 92629[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m741.874 ms - 2439[0m
[0mGET /assets/css/myapp.css [32m200 [0m19.125 ms - 144[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m17.645 ms - 127352[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m15.447 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m15.478 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m18.779 ms - 92629[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m744.728 ms - 2453[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m22.690 ms - 127352[0m
[0mGET /assets/css/myapp.css [32m200 [0m13.467 ms - 144[0m
[0mGET /assets/js/myapp.js [32m200 [0m9.394 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m10.419 ms - 61923[0m
[0mGET /assets/js/jquery.js [32m200 [0m11.330 ms - 92629[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m735.731 ms - 2455[0m
[0mGET /assets/css/myapp.css [32m200 [0m27.657 ms - 144[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m26.962 ms - 127352[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m23.524 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m22.755 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m24.722 ms - 92629[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m723.436 ms - 2351[0m
[0mGET /assets/css/myapp.css [32m200 [0m13.843 ms - 144[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m15.205 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m16.678 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m20.438 ms - 92629[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m21.463 ms - 127352[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m721.199 ms - 2377[0m
[0mGET /assets/css/myapp.css [32m200 [0m21.036 ms - 144[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m18.950 ms - 127352[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m18.855 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m20.022 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m18.171 ms - 92629[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m744.004 ms - 2393[0m
[0mGET /assets/css/myapp.css [32m200 [0m18.001 ms - 144[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m15.721 ms - 127352[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m14.820 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m19.972 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m15.843 ms - 92629[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m719.340 ms - 2395[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m11.549 ms - 127352[0m
[0mGET /assets/css/myapp.css [32m200 [0m17.616 ms - 144[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m16.026 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m16.578 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m17.966 ms - 92629[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m733.784 ms - 2427[0m
[0mGET /assets/css/myapp.css [32m200 [0m15.526 ms - 144[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m15.258 ms - 127352[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m17.854 ms - 61923[0m
[0mGET /assets/js/myapp.js [32m200 [0m22.658 ms - 3321[0m
[0mGET /assets/js/jquery.js [32m200 [0m19.136 ms - 92629[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m723.878 ms - 2429[0m
[0mGET /assets/css/myapp.css [32m200 [0m16.637 ms - 144[0m
[0mGET /assets/js/myapp.js [32m200 [0m15.374 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m16.905 ms - 61923[0m
[0mGET /assets/js/jquery.js [32m200 [0m17.749 ms - 92629[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m16.930 ms - 127352[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m7.155 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m8.194 ms - -[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: 'sas',
  author: '',
  type: 3,
  content: 'sas',
  img: '' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m753.330 ms - 2470[0m
[0mGET /assets/css/myapp.css [32m200 [0m18.745 ms - 320[0m
[0mGET /assets/js/myapp.js [32m200 [0m28.307 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m29.985 ms - 61923[0m
[0mGET /assets/js/jquery.js [32m200 [0m33.220 ms - 92629[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m23.877 ms - 127352[0m
==列表===
[0mGET /article/list [32m200 [0m209.848 ms - 2755[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m7.142 ms - 127352[0m
[0mGET /assets/css/myapp.css [32m200 [0m14.589 ms - 320[0m
[0mGET /assets/js/jquery.js [32m200 [0m2.893 ms - 92629[0m
[0mGET /assets/js/myapp.js [32m200 [0m6.893 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m7.167 ms - 61923[0m
[0mGET /upload/14835992900846632113401257877779.jpg [32m200 [0m4.370 ms - 164388[0m
++++++++++++++ { id: '586dedbd5505a828f02af177' }
评论列表 []
[0mGET /article/detail?id=586dedbd5505a828f02af177 [31m500 [0m105.632 ms - 3138[0m
----- 详情 { _id: 586dedbd5505a828f02af177,
  title: '长城的美永远会超出你的想象',
  author: '大狗',
  type: 3,
  content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
  img: '/upload/14835992900846632113401257877779.jpg' }
[0mGET /assets/css/myapp.css [32m200 [0m4.136 ms - 320[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m4.726 ms - 61923[0m
[0mGET /assets/js/jquery.js [32m200 [0m4.684 ms - 92629[0m
[0mGET /assets/js/myapp.js [32m200 [0m3.709 ms - 3321[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m5.277 ms - 127352[0m
++++++++++++++ { id: '586dedbd5505a828f02af177' }
----- 详情 { _id: 586dedbd5505a828f02af177,
  title: '长城的美永远会超出你的想象',
  author: '大狗',
  type: 3,
  content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
  img: '/upload/14835992900846632113401257877779.jpg' }
评论列表 []
[0mGET /article/detail?id=586dedbd5505a828f02af177 [32m200 [0m214.275 ms - 2428[0m
[0mGET /assets/css/myapp.css [32m200 [0m6.562 ms - 320[0m
[0mGET /assets/js/myapp.js [32m200 [0m6.319 ms - 3321[0m
[0mGET /assets/js/bootstrap.js [32m200 [0m7.392 ms - 61923[0m
[0mGET /assets/js/jquery.js [32m200 [0m7.258 ms - 92629[0m
[0mGET /assets/css/bootstrap.css [32m200 [0m6.707 ms - 127352[0m
[0mGET /upload/14835992900846632113401257877779.jpg [32m200 [0m0.922 ms - 164388[0m
==列表===
[0mGET /article/list [36m304 [0m197.448 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m2.511 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m6.702 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.791 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.956 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m3.479 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m5.536 ms - -[0m
++++++++++++++ { id: '586dedbd5505a828f02af177' }
----- 详情 { _id: 586dedbd5505a828f02af177,
  title: '长城的美永远会超出你的想象',
  author: '大狗',
  type: 3,
  content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
  img: '/upload/14835992900846632113401257877779.jpg' }
评论列表 []
[0mGET /article/detail?id=586dedbd5505a828f02af177 [36m304 [0m80.770 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.881 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.272 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m3.314 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.526 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.819 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.527 ms - -[0m
----- [ { _id: 586de9c89363c323605fb8eb,
    title: 'rrgggg',
    author: '',
    type: 3,
    content: 'we444444444444444444443444444444',
    img: '' },
  { _id: 586dea879363c323605fb8ec,
    title: 'sas',
    author: '',
    type: 3,
    content: 'sas',
    img: '' },
  { _id: 586dedbd5505a828f02af177,
    title: '长城的美永远会超出你的想象',
    author: '大狗',
    type: 3,
    content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
    img: '/upload/14835992900846632113401257877779.jpg' } ]
[0mGET / [36m304 [0m50.884 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.532 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.711 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m3.540 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.610 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.271 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m53.103 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.480 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.535 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.250 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.106 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.685 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.346 ms - -[0m
++++++++++++++ { id: '586dedbd5505a828f02af177' }
----- 详情 { _id: 586dedbd5505a828f02af177,
  title: '长城的美永远会超出你的想象',
  author: '大狗',
  type: 3,
  content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
  img: '/upload/14835992900846632113401257877779.jpg' }
评论列表 []
[0mGET /article/detail?id=586dedbd5505a828f02af177 [36m304 [0m61.297 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m3.793 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.594 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m3.204 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.338 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.305 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.750 ms - -[0m
[0mPOST /comment/add [32m200 [0m35.750 ms - 11[0m
++++++++++++++ { id: '586dedbd5505a828f02af177' }
----- 详情 { _id: 586dedbd5505a828f02af177,
  title: '长城的美永远会超出你的想象',
  author: '大狗',
  type: 3,
  content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
  img: '/upload/14835992900846632113401257877779.jpg' }
评论列表 [ { _id: 586df4c32aa71c2ae82cc51c,
    arId: '586dedbd5505a828f02af177',
    nick: '小可',
    content: '很漂亮哦',
    createTime: '1483601091724' } ]
[0mGET /article/detail?id=586dedbd5505a828f02af177 [32m200 [0m56.588 ms - 2602[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m2.001 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m2.674 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m2.315 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m2.338 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m4.465 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m1.706 ms - -[0m
++++++++++++++ { id: '586dedbd5505a828f02af177' }
----- 详情 { _id: 586dedbd5505a828f02af177,
  title: '长城的美永远会超出你的想象',
  author: '大狗',
  type: 3,
  content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
  img: '/upload/14835992900846632113401257877779.jpg' }
评论列表 [ { _id: 586df4c32aa71c2ae82cc51c,
    arId: '586dedbd5505a828f02af177',
    nick: '小可',
    content: '很漂亮哦',
    createTime: '1483601091724' } ]
[0mGET /article/detail?id=586dedbd5505a828f02af177 [36m304 [0m738.671 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m5.026 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m7.833 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m2.776 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m4.789 ms - -[0m
[0mGET /assets/js/myapp.js [32m200 [0m7.558 ms - 3399[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.913 ms - -[0m
[0mPOST /comment/add [32m200 [0m47.057 ms - 11[0m
++++++++++++++ { id: '586dedbd5505a828f02af177' }
----- 详情 { _id: 586dedbd5505a828f02af177,
  title: '长城的美永远会超出你的想象',
  author: '大狗',
  type: 3,
  content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
  img: '/upload/14835992900846632113401257877779.jpg' }
评论列表 [ { _id: 586df4c32aa71c2ae82cc51c,
    arId: '586dedbd5505a828f02af177',
    nick: '小可',
    content: '很漂亮哦',
    createTime: '1483601091724' },
  { _id: 586df52393d5ba12204b54f1,
    arId: '586dedbd5505a828f02af177',
    nick: '小小',
    content: '嗯，我去过很美的',
    createTime: '1483601187459' } ]
[0mGET /article/detail?id=586dedbd5505a828f02af177 [32m200 [0m187.797 ms - 2788[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.363 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.972 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.416 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.459 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.440 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.443 ms - -[0m
[0mPOST /comment/add [32m200 [0m88.944 ms - 11[0m
++++++++++++++ { id: '586dedbd5505a828f02af177' }
----- 详情 { _id: 586dedbd5505a828f02af177,
  title: '长城的美永远会超出你的想象',
  author: '大狗',
  type: 3,
  content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
  img: '/upload/14835992900846632113401257877779.jpg' }
评论列表 [ { _id: 586df4c32aa71c2ae82cc51c,
    arId: '586dedbd5505a828f02af177',
    nick: '小可',
    content: '很漂亮哦',
    createTime: '1483601091724' },
  { _id: 586df52393d5ba12204b54f1,
    arId: '586dedbd5505a828f02af177',
    nick: '小小',
    content: '嗯，我去过很美的',
    createTime: '1483601187459' },
  { _id: 586df5526b5a0620982b2145,
    arId: '586dedbd5505a828f02af177',
    nick: '小李',
    content: '我跟朋友去过，很不错',
    createTime: '1483601234831' } ]
[0mGET /article/detail?id=586dedbd5505a828f02af177 [32m200 [0m694.702 ms - 2980[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m3.028 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.320 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.613 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.899 ms - -[0m
[0mGET /assets/js/myapp.js [32m200 [0m12.158 ms - 3372[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.854 ms - -[0m
++++++++++++++ { id: '586dedbd5505a828f02af177' }
----- 详情 { _id: 586dedbd5505a828f02af177,
  title: '长城的美永远会超出你的想象',
  author: '大狗',
  type: 3,
  content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
  img: '/upload/14835992900846632113401257877779.jpg' }
评论列表 [ { _id: 586df4c32aa71c2ae82cc51c,
    arId: '586dedbd5505a828f02af177',
    nick: '小可',
    content: '很漂亮哦',
    createTime: '1483601091724' },
  { _id: 586df52393d5ba12204b54f1,
    arId: '586dedbd5505a828f02af177',
    nick: '小小',
    content: '嗯，我去过很美的',
    createTime: '1483601187459' },
  { _id: 586df5526b5a0620982b2145,
    arId: '586dedbd5505a828f02af177',
    nick: '小李',
    content: '我跟朋友去过，很不错',
    createTime: '1483601234831' } ]
[0mGET /article/detail?id=586dedbd5505a828f02af177 [32m200 [0m722.054 ms - 2979[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m5.468 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m6.593 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.644 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.666 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.570 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.549 ms - -[0m
[0mPOST /comment/add [32m200 [0m32.056 ms - 11[0m
++++++++++++++ { id: '586dedbd5505a828f02af177' }
----- 详情 { _id: 586dedbd5505a828f02af177,
  title: '长城的美永远会超出你的想象',
  author: '大狗',
  type: 3,
  content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
  img: '/upload/14835992900846632113401257877779.jpg' }
评论列表 [ { _id: 586df4c32aa71c2ae82cc51c,
    arId: '586dedbd5505a828f02af177',
    nick: '小可',
    content: '很漂亮哦',
    createTime: '1483601091724' },
  { _id: 586df52393d5ba12204b54f1,
    arId: '586dedbd5505a828f02af177',
    nick: '小小',
    content: '嗯，我去过很美的',
    createTime: '1483601187459' },
  { _id: 586df5526b5a0620982b2145,
    arId: '586dedbd5505a828f02af177',
    nick: '小李',
    content: '我跟朋友去过，很不错',
    createTime: '1483601234831' },
  { _id: 586df59af794182888e7a2b4,
    arId: '586dedbd5505a828f02af177',
    nick: '天下霸唱',
    content: '嗖嘎，可以一区',
    createTime: '1483601306926' } ]
[0mGET /article/detail?id=586dedbd5505a828f02af177 [32m200 [0m190.050 ms - 3168[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m6.832 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.342 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.288 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.758 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.545 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.394 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m197.685 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m6.798 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m5.031 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m3.706 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.842 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.058 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.402 ms - -[0m
[0mGET /article/update?id=586dea879363c323605fb8ec [32m200 [0m308.991 ms - 3122[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.918 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.900 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.527 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.192 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.502 ms - -[0m
上传================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 2841,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 1214,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 975,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 64247,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 64248,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 55775 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 2841,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 1214,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 975,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 64247,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 64248,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 55775 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '27768',
     origin: 'http://localhost:9000',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryBMqTQQdlAGL8v93q',
     accept: '*/*',
     referer: 'http://localhost:9000/article/update?id=586dea879363c323605fb8ec',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '27768',
     'Origin',
     'http://localhost:9000',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'multipart/form-data; boundary=----WebKitFormBoundaryBMqTQQdlAGL8v93q',
     'Accept',
     '*/*',
     'Referer',
     'http://localhost:9000/article/update?id=586dea879363c323605fb8ec',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 2841,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 1214,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 975,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 64247,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 64248,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 55775 } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/upload',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/upload',
     path: '/article/upload',
     href: '/article/upload',
     _raw: '/article/upload' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 1214,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 64248,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 1214,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 64248,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 18174, 847523391 ],
  _startTime: 2017-01-05T07:29:49.978Z,
  _remoteAddress: '::1',
  body: {},
  secret: undefined,
  cookies: {},
  signedCookies: {},
  route: 
   Route {
     path: '/article/upload',
     stack: [ [Object] ],
     methods: { post: true } } }
========== {} { myfile: 
   File {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     size: 27569,
     path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_8b9a9a8627614f5ba98999fa97574f89',
     name: '6631886901862555933.jpg',
     type: 'image/jpeg',
     hash: null,
     lastModifiedDate: 2017-01-05T07:29:50.018Z,
     _writeStream: 
      WriteStream {
        _writableState: [Object],
        writable: false,
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_8b9a9a8627614f5ba98999fa97574f89',
        fd: null,
        flags: 'w',
        mode: 438,
        start: undefined,
        autoClose: true,
        pos: undefined,
        bytesWritten: 27569,
        closed: true } } }
[0mPOST /article/upload [32m200 [0m52.921 ms - 44[0m
[0mGET /upload/14836013900236631886901862555933.jpg [32m200 [0m11.161 ms - 27569[0m
{ id: '586dea879363c323605fb8ec',
  params: 
   { title: '让姚明当篮协主席最大的阻力在哪？',
     author: '风清扬',
     type: 3,
     content: '新年伊始，《篮球先锋报》便曝出了一则令篮球迷们欢欣鼓舞的好消息——体育总局建议让姚明担任篮协主席并兼任男篮国家队主教练。而对于各大媒体的求证和追问，相关人士虽未证实，却也给出了“一切皆有可能”的答案。就此新华社撰文称，光有热情、知名度和管理经验，姚明入主篮协仍有障碍：资历和经验尚浅，“毕竟篮协从没有这么年轻的主席”。\n\n \n\n姚明的确有不适合当篮协主席的理由，比如首先由于姚明本人就是上海东方大鲨鱼俱乐部的老板，他可以兼任公司的董事长，却不太合适担任需要保持中立性的篮协主席。当然，在过渡阶段，加上姚明本人具有极高威望和地位，以他的人格魅力未必不能一试。至于男篮主教练，这是一个技术活，姚明退役后并没有从事教练职业。另外，出任篮协主席又会不会影响他作为上海俱乐部投资人的位置？\n\n \n\n但“太年轻资历浅”，这是一个不应该成为理由的理由。姚明今年37岁，也是快四十岁的人了，很多官场中人在这个年龄混得好的，也到正厅副部了。而这个年龄正是干事业的年龄，难道一定要一个懂做官但从未打过蓝球，甚至没有搞过体育的人才算是有“资历”。如果真是这样，就算是上面点头了，姚明本人也未必愿意，因为他会去体会和理解郎平当年回国接管女排时有多难。\n\n \n\n按照惯例，篮协主席以前一般由体育总局的官员担任，因此经常出现“外行管内行”的情况。现在国家提出“管办分离”，中国足协已经走在前面，篮球协会也要紧紧跟上。如果姚明当篮协主席，至少不会有“外行领导内行”的弊端；姚明当男篮主教练，再大牌的所谓“球星”也得服服帖帖，因为中国篮球没人能比姚明更大牌。可以说，姚明出山可最大限度避免中国篮球界的“内耗”，有利于整合各方力量迅速提高男篮的实力和战绩。\n\n \n\n另外，作为中国最成功的篮球运动员，姚明具备的影响力和号召力是不言而喻的，而在退役之后，姚明成为了上海男篮的老板，在NBA效力的经历使他视野开阔，他也一直试图推动CBA联赛的职业化改革。国家体育总局建议请姚明担任中国篮球协会主席，这不是“干涉内政”，而是着眼全局的建议——姚明有丰富的篮球经历，曾在美国打球有更开阔的视野，对篮球改革也有自己独到的见解。在目前的篮协主席候选人中，姚明无疑是最佳人选。',
     img: '/upload/14836013900236631886901862555933.jpg' } }
----- { result: { ok: 1, nModified: 1, n: 1 },
  connection: 
   EventEmitter {
     domain: null,
     _events: 
      { error: [Object],
        close: [Object],
        timeout: [Object],
        parseError: [Object] },
     _eventsCount: 4,
     _maxListeners: undefined,
     options: 
      { host: '127.0.0.1',
        port: 27017,
        size: 5,
        connectionTimeout: 30000,
        socketTimeout: 30000,
        keepAlive: true,
        keepAliveInitialDelay: 0,
        noDelay: true,
        ssl: false,
        checkServerIdentity: true,
        ca: null,
        cert: null,
        key: null,
        passPhrase: null,
        rejectUnauthorized: false,
        promoteLongs: true,
        promoteValues: true,
        promoteBuffers: false,
        reconnect: true,
        reconnectInterval: 1000,
        reconnectTries: 30,
        domainsEnabled: false,
        disconnectHandler: [Object],
        cursorFactory: [Object],
        emitError: true,
        socketOptions: {},
        clientInfo: [Object],
        readPreference: [Object],
        promiseLibrary: [Function: Promise],
        bson: {} },
     id: 0,
     logger: { className: 'Connection' },
     bson: {},
     tag: undefined,
     messageHandler: [Function],
     maxBsonMessageSize: 67108864,
     port: 27017,
     host: '127.0.0.1',
     keepAlive: true,
     keepAliveInitialDelay: 0,
     noDelay: true,
     connectionTimeout: 30000,
     socketTimeout: 30000,
     destroyed: false,
     domainSocket: false,
     singleBufferSerializtion: true,
     serializationFunction: 'toBinUnified',
     ca: null,
     cert: null,
     key: null,
     passphrase: null,
     ssl: false,
     rejectUnauthorized: false,
     checkServerIdentity: true,
     responseOptions: 
      { promoteLongs: true,
        promoteValues: true,
        promoteBuffers: false },
     flushing: false,
     queue: [],
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        _bytesDispatched: 3255,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        _idleTimeout: 30000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 3093,
        read: [Function],
        _consuming: true },
     writeStream: null,
     hashedName: '1af0a80ead1d9e3c1a02ad090ffe77ff1334aae9',
     workItems: [],
     buffer: null,
     sizeOfMessage: 0,
     bytesRead: 0,
     stubBuffer: null },
  message: 
   { parsed: true,
     index: 71,
     raw: <Buffer 47 00 00 00 bb 06 00 00 02 00 00 00 01 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 23 00 00 00 10 6f 6b 00 01 00 00 00 10 6e ... >,
     data: <Buffer 47 00 00 00 bb 06 00 00 02 00 00 00 01 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 23 00 00 00 10 6f 6b 00 01 00 00 00 10 6e ... >,
     bson: {},
     opts: 
      { promoteLongs: true,
        promoteValues: true,
        promoteBuffers: false },
     length: 71,
     requestId: 1723,
     responseTo: 2,
     responseFlags: 8,
     cursorId: Long { _bsontype: 'Long', low_: 0, high_: 0 },
     startingFrom: 0,
     numberReturned: 1,
     documents: [ [Object] ],
     cursorNotFound: false,
     queryFailure: false,
     shardConfigStale: false,
     awaitCapable: true,
     promoteLongs: true,
     promoteValues: true,
     promoteBuffers: false,
     hashedName: '1af0a80ead1d9e3c1a02ad090ffe77ff1334aae9' } }
[0mPOST /article/update2 [32m200 [0m185.197 ms - 11[0m
==列表===
[0mGET /article/list [32m200 [0m677.810 ms - 2844[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m3.705 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m3.343 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.603 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.669 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m4.770 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.757 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.470 ms - -[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: '让姚明当篮协主席最大的阻力在哪？',
  author: '风清扬',
  type: 3,
  content: '新年伊始，《篮球先锋报》便曝出了一则令篮球迷们欢欣鼓舞的好消息——体育总局建议让姚明担任篮协主席并兼任男篮国家队主教练。而对于各大媒体的求证和追问，相关人士虽未证实，却也给出了“一切皆有可能”的答案。就此新华社撰文称，光有热情、知名度和管理经验，姚明入主篮协仍有障碍：资历和经验尚浅，“毕竟篮协从没有这么年轻的主席”。\n\n \n\n姚明的确有不适合当篮协主席的理由，比如首先由于姚明本人就是上海东方大鲨鱼俱乐部的老板，他可以兼任公司的董事长，却不太合适担任需要保持中立性的篮协主席。当然，在过渡阶段，加上姚明本人具有极高威望和地位，以他的人格魅力未必不能一试。至于男篮主教练，这是一个技术活，姚明退役后并没有从事教练职业。另外，出任篮协主席又会不会影响他作为上海俱乐部投资人的位置？\n\n \n\n但“太年轻资历浅”，这是一个不应该成为理由的理由。姚明今年37岁，也是快四十岁的人了，很多官场中人在这个年龄混得好的，也到正厅副部了。而这个年龄正是干事业的年龄，难道一定要一个懂做官但从未打过蓝球，甚至没有搞过体育的人才算是有“资历”。如果真是这样，就算是上面点头了，姚明本人也未必愿意，因为他会去体会和理解郎平当年回国接管女排时有多难。\n\n \n\n按照惯例，篮协主席以前一般由体育总局的官员担任，因此经常出现“外行管内行”的情况。现在国家提出“管办分离”，中国足协已经走在前面，篮球协会也要紧紧跟上。如果姚明当篮协主席，至少不会有“外行领导内行”的弊端；姚明当男篮主教练，再大牌的所谓“球星”也得服服帖帖，因为中国篮球没人能比姚明更大牌。可以说，姚明出山可最大限度避免中国篮球界的“内耗”，有利于整合各方力量迅速提高男篮的实力和战绩。\n\n \n\n另外，作为中国最成功的篮球运动员，姚明具备的影响力和号召力是不言而喻的，而在退役之后，姚明成为了上海男篮的老板，在NBA效力的经历使他视野开阔，他也一直试图推动CBA联赛的职业化改革。国家体育总局建议请姚明担任中国篮球协会主席，这不是“干涉内政”，而是着眼全局的建议——姚明有丰富的篮球经历，曾在美国打球有更开阔的视野，对篮球改革也有自己独到的见解。在目前的篮协主席候选人中，姚明无疑是最佳人选。',
  img: '/upload/14836013900236631886901862555933.jpg' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [32m200 [0m176.627 ms - 5241[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m3.950 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m2.603 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m2.117 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.199 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.423 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.437 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m208.006 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.035 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m6.270 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m2.027 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.969 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.722 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.883 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.585 ms - -[0m
[0mGET /article/update?id=586de9c89363c323605fb8eb [32m200 [0m213.338 ms - 3154[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.114 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m3.995 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.616 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.127 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.981 ms - -[0m
上传================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3373,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 6662,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 970,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 72063,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 72064,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 55834 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3373,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 6662,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 970,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 72063,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 72064,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 55834 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '132647',
     origin: 'http://localhost:9000',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryl3cBrA8CYJaRTzR2',
     accept: '*/*',
     referer: 'http://localhost:9000/article/update?id=586de9c89363c323605fb8eb',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '132647',
     'Origin',
     'http://localhost:9000',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'multipart/form-data; boundary=----WebKitFormBoundaryl3cBrA8CYJaRTzR2',
     'Accept',
     '*/*',
     'Referer',
     'http://localhost:9000/article/update?id=586de9c89363c323605fb8eb',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3373,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 6662,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 970,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 72063,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 72064,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 55834 } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/upload',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/upload',
     path: '/article/upload',
     href: '/article/upload',
     _raw: '/article/upload' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 6662,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 72064,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 6662,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 72064,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 18305, 122133654 ],
  _startTime: 2017-01-05T07:32:00.253Z,
  _remoteAddress: '::1',
  body: {},
  secret: undefined,
  cookies: {},
  signedCookies: {},
  route: 
   Route {
     path: '/article/upload',
     stack: [ [Object] ],
     methods: { post: true } } }
========== {} { myfile: 
   File {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     size: 132448,
     path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_4812fda01be6f2d6e0c65e8e0b49b7f0',
     name: '6632036435443952981.jpg',
     type: 'image/jpeg',
     hash: null,
     lastModifiedDate: 2017-01-05T07:32:00.298Z,
     _writeStream: 
      WriteStream {
        _writableState: [Object],
        writable: false,
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_4812fda01be6f2d6e0c65e8e0b49b7f0',
        fd: null,
        flags: 'w',
        mode: 438,
        start: undefined,
        autoClose: true,
        pos: undefined,
        bytesWritten: 132448,
        closed: true } } }
[0mPOST /article/upload [32m200 [0m115.826 ms - 44[0m
[0mGET /upload/14836015203016632036435443952981.jpg [32m200 [0m4.110 ms - 132448[0m
{ id: '586de9c89363c323605fb8eb',
  params: 
   { title: '野生鸳鸯更漂亮',
     author: '卡卡',
     type: 3,
     content: '鸳鸯，雌雄异色。雄鸟嘴红色，脚橙黄色，羽色鲜艳而华丽，非常奇特和醒目，野外极易辨认。雌鸟嘴黑色，脚橙黄色，头和整个上体灰褐色，亦极为醒目和独特。主要栖息于山地森林河流、湖泊、水塘、芦苇沼泽和稻田地中。杂食性。鸳鸯为中国著名的观赏鸟类，被看成爱情的象征。2016年12月31日在陕西洋县境内拍摄。',
     img: '/upload/14836015203016632036435443952981.jpg' } }
----- { result: { ok: 1, nModified: 1, n: 1 },
  connection: 
   EventEmitter {
     domain: null,
     _events: 
      { error: [Object],
        close: [Object],
        timeout: [Object],
        parseError: [Object] },
     _eventsCount: 4,
     _maxListeners: undefined,
     options: 
      { host: '127.0.0.1',
        port: 27017,
        size: 5,
        connectionTimeout: 30000,
        socketTimeout: 30000,
        keepAlive: true,
        keepAliveInitialDelay: 0,
        noDelay: true,
        ssl: false,
        checkServerIdentity: true,
        ca: null,
        cert: null,
        key: null,
        passPhrase: null,
        rejectUnauthorized: false,
        promoteLongs: true,
        promoteValues: true,
        promoteBuffers: false,
        reconnect: true,
        reconnectInterval: 1000,
        reconnectTries: 30,
        domainsEnabled: false,
        disconnectHandler: [Object],
        cursorFactory: [Object],
        emitError: true,
        socketOptions: {},
        clientInfo: [Object],
        readPreference: [Object],
        promiseLibrary: [Function: Promise],
        bson: {} },
     id: 0,
     logger: { className: 'Connection' },
     bson: {},
     tag: undefined,
     messageHandler: [Function],
     maxBsonMessageSize: 67108864,
     port: 27017,
     host: '127.0.0.1',
     keepAlive: true,
     keepAliveInitialDelay: 0,
     noDelay: true,
     connectionTimeout: 30000,
     socketTimeout: 30000,
     destroyed: false,
     domainSocket: false,
     singleBufferSerializtion: true,
     serializationFunction: 'toBinUnified',
     ca: null,
     cert: null,
     key: null,
     passphrase: null,
     ssl: false,
     rejectUnauthorized: false,
     checkServerIdentity: true,
     responseOptions: 
      { promoteLongs: true,
        promoteValues: true,
        promoteBuffers: false },
     flushing: false,
     queue: [],
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        _bytesDispatched: 964,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        _idleTimeout: 30000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 2184,
        read: [Function],
        _consuming: true },
     writeStream: null,
     hashedName: '1af0a80ead1d9e3c1a02ad090ffe77ff1334aae9',
     workItems: [],
     buffer: null,
     sizeOfMessage: 0,
     bytesRead: 0,
     stubBuffer: null },
  message: 
   { parsed: true,
     index: 71,
     raw: <Buffer 47 00 00 00 ff 06 00 00 02 00 00 00 01 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 23 00 00 00 10 6f 6b 00 01 00 00 00 10 6e ... >,
     data: <Buffer 47 00 00 00 ff 06 00 00 02 00 00 00 01 00 00 00 08 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 23 00 00 00 10 6f 6b 00 01 00 00 00 10 6e ... >,
     bson: {},
     opts: 
      { promoteLongs: true,
        promoteValues: true,
        promoteBuffers: false },
     length: 71,
     requestId: 1791,
     responseTo: 2,
     responseFlags: 8,
     cursorId: Long { _bsontype: 'Long', low_: 0, high_: 0 },
     startingFrom: 0,
     numberReturned: 1,
     documents: [ [Object] ],
     cursorNotFound: false,
     queryFailure: false,
     shardConfigStale: false,
     awaitCapable: true,
     promoteLongs: true,
     promoteValues: true,
     promoteBuffers: false,
     hashedName: '1af0a80ead1d9e3c1a02ad090ffe77ff1334aae9' } }
[0mPOST /article/update2 [32m200 [0m98.399 ms - 11[0m
==列表===
[0mGET /article/list [32m200 [0m677.662 ms - 2903[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m4.546 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m6.852 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m4.742 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m4.038 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m5.691 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.472 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.573 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.376 ms - -[0m
++++++++++++++ { id: '586dedbd5505a828f02af177' }
----- 详情 { _id: 586dedbd5505a828f02af177,
  title: '长城的美永远会超出你的想象',
  author: '大狗',
  type: 3,
  content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
  img: '/upload/14835992900846632113401257877779.jpg' }
评论列表 [ { _id: 586df4c32aa71c2ae82cc51c,
    arId: '586dedbd5505a828f02af177',
    nick: '小可',
    content: '很漂亮哦',
    createTime: '1483601091724' },
  { _id: 586df52393d5ba12204b54f1,
    arId: '586dedbd5505a828f02af177',
    nick: '小小',
    content: '嗯，我去过很美的',
    createTime: '1483601187459' },
  { _id: 586df5526b5a0620982b2145,
    arId: '586dedbd5505a828f02af177',
    nick: '小李',
    content: '我跟朋友去过，很不错',
    createTime: '1483601234831' },
  { _id: 586df59af794182888e7a2b4,
    arId: '586dedbd5505a828f02af177',
    nick: '天下霸唱',
    content: '嗖嘎，可以一区',
    createTime: '1483601306926' } ]
[0mGET /article/detail?id=586dedbd5505a828f02af177 [36m304 [0m183.229 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.933 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.610 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.766 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.784 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m8.870 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m1.088 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m70.569 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.109 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.455 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m3.784 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.625 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.532 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.809 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.355 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.399 ms - -[0m
++++++++++++++ { id: '586dea879363c323605fb8ec' }
----- 详情 { _id: 586dea879363c323605fb8ec,
  title: '让姚明当篮协主席最大的阻力在哪？',
  author: '风清扬',
  type: 3,
  content: '新年伊始，《篮球先锋报》便曝出了一则令篮球迷们欢欣鼓舞的好消息——体育总局建议让姚明担任篮协主席并兼任男篮国家队主教练。而对于各大媒体的求证和追问，相关人士虽未证实，却也给出了“一切皆有可能”的答案。就此新华社撰文称，光有热情、知名度和管理经验，姚明入主篮协仍有障碍：资历和经验尚浅，“毕竟篮协从没有这么年轻的主席”。\n\n \n\n姚明的确有不适合当篮协主席的理由，比如首先由于姚明本人就是上海东方大鲨鱼俱乐部的老板，他可以兼任公司的董事长，却不太合适担任需要保持中立性的篮协主席。当然，在过渡阶段，加上姚明本人具有极高威望和地位，以他的人格魅力未必不能一试。至于男篮主教练，这是一个技术活，姚明退役后并没有从事教练职业。另外，出任篮协主席又会不会影响他作为上海俱乐部投资人的位置？\n\n \n\n但“太年轻资历浅”，这是一个不应该成为理由的理由。姚明今年37岁，也是快四十岁的人了，很多官场中人在这个年龄混得好的，也到正厅副部了。而这个年龄正是干事业的年龄，难道一定要一个懂做官但从未打过蓝球，甚至没有搞过体育的人才算是有“资历”。如果真是这样，就算是上面点头了，姚明本人也未必愿意，因为他会去体会和理解郎平当年回国接管女排时有多难。\n\n \n\n按照惯例，篮协主席以前一般由体育总局的官员担任，因此经常出现“外行管内行”的情况。现在国家提出“管办分离”，中国足协已经走在前面，篮球协会也要紧紧跟上。如果姚明当篮协主席，至少不会有“外行领导内行”的弊端；姚明当男篮主教练，再大牌的所谓“球星”也得服服帖帖，因为中国篮球没人能比姚明更大牌。可以说，姚明出山可最大限度避免中国篮球界的“内耗”，有利于整合各方力量迅速提高男篮的实力和战绩。\n\n \n\n另外，作为中国最成功的篮球运动员，姚明具备的影响力和号召力是不言而喻的，而在退役之后，姚明成为了上海男篮的老板，在NBA效力的经历使他视野开阔，他也一直试图推动CBA联赛的职业化改革。国家体育总局建议请姚明担任中国篮球协会主席，这不是“干涉内政”，而是着眼全局的建议——姚明有丰富的篮球经历，曾在美国打球有更开阔的视野，对篮球改革也有自己独到的见解。在目前的篮协主席候选人中，姚明无疑是最佳人选。',
  img: '/upload/14836013900236631886901862555933.jpg' }
评论列表 [ { _id: 586dee8fb2a9980a6098bc70,
    arId: '586dea879363c323605fb8ec',
    nick: '是是是',
    content: '撒',
    createTime: '1483599503277' },
  { _id: 586def9d08ebab17308ad103,
    arId: '586dea879363c323605fb8ec',
    nick: '飒飒',
    content: '飒飒',
    createTime: '1483599773333' } ]
[0mGET /article/detail?id=586dea879363c323605fb8ec [36m304 [0m67.729 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.481 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.774 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.749 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.642 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.251 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m1.031 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m52.775 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.573 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.734 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m2.112 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.572 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.402 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.396 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.406 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m2.001 ms - -[0m
++++++++++++++ { id: '586de9c89363c323605fb8eb' }
----- 详情 { _id: 586de9c89363c323605fb8eb,
  title: '野生鸳鸯更漂亮',
  author: '卡卡',
  type: 3,
  content: '鸳鸯，雌雄异色。雄鸟嘴红色，脚橙黄色，羽色鲜艳而华丽，非常奇特和醒目，野外极易辨认。雌鸟嘴黑色，脚橙黄色，头和整个上体灰褐色，亦极为醒目和独特。主要栖息于山地森林河流、湖泊、水塘、芦苇沼泽和稻田地中。杂食性。鸳鸯为中国著名的观赏鸟类，被看成爱情的象征。2016年12月31日在陕西洋县境内拍摄。',
  img: '/upload/14836015203016632036435443952981.jpg' }
评论列表 [ { _id: 586dea959363c323605fb8ed,
    arId: '586de9c89363c323605fb8eb',
    nick: 'sas',
    content: 'sa',
    createTime: '1483598485474' },
  { _id: 586decbded9ac61ed43a63ed,
    arId: '586de9c89363c323605fb8eb',
    nick: 'wqw',
    content: 'wqwqwq',
    createTime: '1483599037183' } ]
[0mGET /article/detail?id=586de9c89363c323605fb8eb [32m200 [0m186.137 ms - 2943[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m3.567 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m2.462 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.824 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m4.311 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m2.981 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.405 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m208.351 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m5.511 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m5.621 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m5.599 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m4.580 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m3.116 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.605 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.657 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.513 ms - -[0m
==列表===
[0mGET /article/list [32m200 [0m688.039 ms - 3068[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m4.878 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m6.706 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.951 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.989 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m2.091 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.448 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.535 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m1.831 ms - -[0m
[0mGET /article/update?id=586dea879363c323605fb8ec [32m200 [0m195.029 ms - 5903[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.753 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.957 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.136 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.124 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.414 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.365 ms - -[0m
[0mGET /article/index [36m304 [0m214.599 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.753 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.031 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.684 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m4.686 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m2.608 ms - -[0m
----- [ { _id: 586dedbd5505a828f02af177,
    title: '长城的美永远会超出你的想象',
    author: '大狗',
    type: 3,
    content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
    img: '/upload/14835992900846632113401257877779.jpg' },
  { _id: 586dea879363c323605fb8ec,
    title: '让姚明当篮协主席最大的阻力在哪？',
    author: '风清扬',
    type: 3,
    content: '新年伊始，《篮球先锋报》便曝出了一则令篮球迷们欢欣鼓舞的好消息——体育总局建议让姚明担任篮协主席并兼任男篮国家队主教练。而对于各大媒体的求证和追问，相关人士虽未证实，却也给出了“一切皆有可能”的答案。就此新华社撰文称，光有热情、知名度和管理经验，姚明入主篮协仍有障碍：资历和经验尚浅，“毕竟篮协从没有这么年轻的主席”。\n\n \n\n姚明的确有不适合当篮协主席的理由，比如首先由于姚明本人就是上海东方大鲨鱼俱乐部的老板，他可以兼任公司的董事长，却不太合适担任需要保持中立性的篮协主席。当然，在过渡阶段，加上姚明本人具有极高威望和地位，以他的人格魅力未必不能一试。至于男篮主教练，这是一个技术活，姚明退役后并没有从事教练职业。另外，出任篮协主席又会不会影响他作为上海俱乐部投资人的位置？\n\n \n\n但“太年轻资历浅”，这是一个不应该成为理由的理由。姚明今年37岁，也是快四十岁的人了，很多官场中人在这个年龄混得好的，也到正厅副部了。而这个年龄正是干事业的年龄，难道一定要一个懂做官但从未打过蓝球，甚至没有搞过体育的人才算是有“资历”。如果真是这样，就算是上面点头了，姚明本人也未必愿意，因为他会去体会和理解郎平当年回国接管女排时有多难。\n\n \n\n按照惯例，篮协主席以前一般由体育总局的官员担任，因此经常出现“外行管内行”的情况。现在国家提出“管办分离”，中国足协已经走在前面，篮球协会也要紧紧跟上。如果姚明当篮协主席，至少不会有“外行领导内行”的弊端；姚明当男篮主教练，再大牌的所谓“球星”也得服服帖帖，因为中国篮球没人能比姚明更大牌。可以说，姚明出山可最大限度避免中国篮球界的“内耗”，有利于整合各方力量迅速提高男篮的实力和战绩。\n\n \n\n另外，作为中国最成功的篮球运动员，姚明具备的影响力和号召力是不言而喻的，而在退役之后，姚明成为了上海男篮的老板，在NBA效力的经历使他视野开阔，他也一直试图推动CBA联赛的职业化改革。国家体育总局建议请姚明担任中国篮球协会主席，这不是“干涉内政”，而是着眼全局的建议——姚明有丰富的篮球经历，曾在美国打球有更开阔的视野，对篮球改革也有自己独到的见解。在目前的篮协主席候选人中，姚明无疑是最佳人选。',
    img: '/upload/14836013900236631886901862555933.jpg' },
  { _id: 586de9c89363c323605fb8eb,
    title: '野生鸳鸯更漂亮',
    author: '卡卡',
    type: 3,
    content: '鸳鸯，雌雄异色。雄鸟嘴红色，脚橙黄色，羽色鲜艳而华丽，非常奇特和醒目，野外极易辨认。雌鸟嘴黑色，脚橙黄色，头和整个上体灰褐色，亦极为醒目和独特。主要栖息于山地森林河流、湖泊、水塘、芦苇沼泽和稻田地中。杂食性。鸳鸯为中国著名的观赏鸟类，被看成爱情的象征。2016年12月31日在陕西洋县境内拍摄。',
    img: '/upload/14836015203016632036435443952981.jpg' } ]
[0mGET / [36m304 [0m78.762 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m2.196 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m4.845 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m4.920 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m3.279 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m2.058 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m94.390 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.670 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.581 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.810 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.588 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m3.344 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.412 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m1.579 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.626 ms - -[0m
==列表===
[0mGET /article/list [32m200 [0m733.858 ms - 3062[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m5.113 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m6.460 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m6.012 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.425 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.402 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m2.216 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.341 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.387 ms - -[0m
==列表===
[0mGET /article/list [32m200 [0m745.925 ms - 3080[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m6.619 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m7.219 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m7.851 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m8.028 ms - -[0m
[0mGET /assets/css/myapp.css [32m200 [0m19.978 ms - 363[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.403 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.358 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.380 ms - -[0m
[0mGET /article/update?id=586de9c89363c323605fb8eb [32m200 [0m195.818 ms - 3612[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m2.770 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m2.891 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m2.364 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.476 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.761 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.862 ms - -[0m
----- [ { _id: 586dedbd5505a828f02af177,
    title: '长城的美永远会超出你的想象',
    author: '大狗',
    type: 3,
    content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
    img: '/upload/14835992900846632113401257877779.jpg' },
  { _id: 586dea879363c323605fb8ec,
    title: '让姚明当篮协主席最大的阻力在哪？',
    author: '风清扬',
    type: 3,
    content: '新年伊始，《篮球先锋报》便曝出了一则令篮球迷们欢欣鼓舞的好消息——体育总局建议让姚明担任篮协主席并兼任男篮国家队主教练。而对于各大媒体的求证和追问，相关人士虽未证实，却也给出了“一切皆有可能”的答案。就此新华社撰文称，光有热情、知名度和管理经验，姚明入主篮协仍有障碍：资历和经验尚浅，“毕竟篮协从没有这么年轻的主席”。\n\n \n\n姚明的确有不适合当篮协主席的理由，比如首先由于姚明本人就是上海东方大鲨鱼俱乐部的老板，他可以兼任公司的董事长，却不太合适担任需要保持中立性的篮协主席。当然，在过渡阶段，加上姚明本人具有极高威望和地位，以他的人格魅力未必不能一试。至于男篮主教练，这是一个技术活，姚明退役后并没有从事教练职业。另外，出任篮协主席又会不会影响他作为上海俱乐部投资人的位置？\n\n \n\n但“太年轻资历浅”，这是一个不应该成为理由的理由。姚明今年37岁，也是快四十岁的人了，很多官场中人在这个年龄混得好的，也到正厅副部了。而这个年龄正是干事业的年龄，难道一定要一个懂做官但从未打过蓝球，甚至没有搞过体育的人才算是有“资历”。如果真是这样，就算是上面点头了，姚明本人也未必愿意，因为他会去体会和理解郎平当年回国接管女排时有多难。\n\n \n\n按照惯例，篮协主席以前一般由体育总局的官员担任，因此经常出现“外行管内行”的情况。现在国家提出“管办分离”，中国足协已经走在前面，篮球协会也要紧紧跟上。如果姚明当篮协主席，至少不会有“外行领导内行”的弊端；姚明当男篮主教练，再大牌的所谓“球星”也得服服帖帖，因为中国篮球没人能比姚明更大牌。可以说，姚明出山可最大限度避免中国篮球界的“内耗”，有利于整合各方力量迅速提高男篮的实力和战绩。\n\n \n\n另外，作为中国最成功的篮球运动员，姚明具备的影响力和号召力是不言而喻的，而在退役之后，姚明成为了上海男篮的老板，在NBA效力的经历使他视野开阔，他也一直试图推动CBA联赛的职业化改革。国家体育总局建议请姚明担任中国篮球协会主席，这不是“干涉内政”，而是着眼全局的建议——姚明有丰富的篮球经历，曾在美国打球有更开阔的视野，对篮球改革也有自己独到的见解。在目前的篮协主席候选人中，姚明无疑是最佳人选。',
    img: '/upload/14836013900236631886901862555933.jpg' },
  { _id: 586de9c89363c323605fb8eb,
    title: '野生鸳鸯更漂亮',
    author: '卡卡',
    type: 3,
    content: '鸳鸯，雌雄异色。雄鸟嘴红色，脚橙黄色，羽色鲜艳而华丽，非常奇特和醒目，野外极易辨认。雌鸟嘴黑色，脚橙黄色，头和整个上体灰褐色，亦极为醒目和独特。主要栖息于山地森林河流、湖泊、水塘、芦苇沼泽和稻田地中。杂食性。鸳鸯为中国著名的观赏鸟类，被看成爱情的象征。2016年12月31日在陕西洋县境内拍摄。',
    img: '/upload/14836015203016632036435443952981.jpg' } ]
[0mGET / [36m304 [0m58.303 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.567 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m3.637 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.305 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.458 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.394 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m100.110 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.196 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.854 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m3.650 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.953 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m4.306 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.413 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.340 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.759 ms - -[0m
++++++++++++++ { id: '586dedbd5505a828f02af177' }
----- 详情 { _id: 586dedbd5505a828f02af177,
  title: '长城的美永远会超出你的想象',
  author: '大狗',
  type: 3,
  content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
  img: '/upload/14835992900846632113401257877779.jpg' }
评论列表 [ { _id: 586df4c32aa71c2ae82cc51c,
    arId: '586dedbd5505a828f02af177',
    nick: '小可',
    content: '很漂亮哦',
    createTime: '1483601091724' },
  { _id: 586df52393d5ba12204b54f1,
    arId: '586dedbd5505a828f02af177',
    nick: '小小',
    content: '嗯，我去过很美的',
    createTime: '1483601187459' },
  { _id: 586df5526b5a0620982b2145,
    arId: '586dedbd5505a828f02af177',
    nick: '小李',
    content: '我跟朋友去过，很不错',
    createTime: '1483601234831' },
  { _id: 586df59af794182888e7a2b4,
    arId: '586dedbd5505a828f02af177',
    nick: '天下霸唱',
    content: '嗖嘎，可以一区',
    createTime: '1483601306926' } ]
[0mGET /article/detail?id=586dedbd5505a828f02af177 [36m304 [0m197.704 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.422 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m2.129 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.144 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.516 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.727 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.382 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m196.038 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.902 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.785 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.079 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.579 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.500 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.457 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.398 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.675 ms - -[0m
[0mGET /article/update?id=586de9c89363c323605fb8eb [36m304 [0m97.493 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m3.107 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.767 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.680 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.843 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.532 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.652 ms - -[0m
----- [ { _id: 586dedbd5505a828f02af177,
    title: '长城的美永远会超出你的想象',
    author: '大狗',
    type: 3,
    content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
    img: '/upload/14835992900846632113401257877779.jpg' },
  { _id: 586dea879363c323605fb8ec,
    title: '让姚明当篮协主席最大的阻力在哪？',
    author: '风清扬',
    type: 3,
    content: '新年伊始，《篮球先锋报》便曝出了一则令篮球迷们欢欣鼓舞的好消息——体育总局建议让姚明担任篮协主席并兼任男篮国家队主教练。而对于各大媒体的求证和追问，相关人士虽未证实，却也给出了“一切皆有可能”的答案。就此新华社撰文称，光有热情、知名度和管理经验，姚明入主篮协仍有障碍：资历和经验尚浅，“毕竟篮协从没有这么年轻的主席”。\n\n \n\n姚明的确有不适合当篮协主席的理由，比如首先由于姚明本人就是上海东方大鲨鱼俱乐部的老板，他可以兼任公司的董事长，却不太合适担任需要保持中立性的篮协主席。当然，在过渡阶段，加上姚明本人具有极高威望和地位，以他的人格魅力未必不能一试。至于男篮主教练，这是一个技术活，姚明退役后并没有从事教练职业。另外，出任篮协主席又会不会影响他作为上海俱乐部投资人的位置？\n\n \n\n但“太年轻资历浅”，这是一个不应该成为理由的理由。姚明今年37岁，也是快四十岁的人了，很多官场中人在这个年龄混得好的，也到正厅副部了。而这个年龄正是干事业的年龄，难道一定要一个懂做官但从未打过蓝球，甚至没有搞过体育的人才算是有“资历”。如果真是这样，就算是上面点头了，姚明本人也未必愿意，因为他会去体会和理解郎平当年回国接管女排时有多难。\n\n \n\n按照惯例，篮协主席以前一般由体育总局的官员担任，因此经常出现“外行管内行”的情况。现在国家提出“管办分离”，中国足协已经走在前面，篮球协会也要紧紧跟上。如果姚明当篮协主席，至少不会有“外行领导内行”的弊端；姚明当男篮主教练，再大牌的所谓“球星”也得服服帖帖，因为中国篮球没人能比姚明更大牌。可以说，姚明出山可最大限度避免中国篮球界的“内耗”，有利于整合各方力量迅速提高男篮的实力和战绩。\n\n \n\n另外，作为中国最成功的篮球运动员，姚明具备的影响力和号召力是不言而喻的，而在退役之后，姚明成为了上海男篮的老板，在NBA效力的经历使他视野开阔，他也一直试图推动CBA联赛的职业化改革。国家体育总局建议请姚明担任中国篮球协会主席，这不是“干涉内政”，而是着眼全局的建议——姚明有丰富的篮球经历，曾在美国打球有更开阔的视野，对篮球改革也有自己独到的见解。在目前的篮协主席候选人中，姚明无疑是最佳人选。',
    img: '/upload/14836013900236631886901862555933.jpg' },
  { _id: 586de9c89363c323605fb8eb,
    title: '野生鸳鸯更漂亮',
    author: '卡卡',
    type: 3,
    content: '鸳鸯，雌雄异色。雄鸟嘴红色，脚橙黄色，羽色鲜艳而华丽，非常奇特和醒目，野外极易辨认。雌鸟嘴黑色，脚橙黄色，头和整个上体灰褐色，亦极为醒目和独特。主要栖息于山地森林河流、湖泊、水塘、芦苇沼泽和稻田地中。杂食性。鸳鸯为中国著名的观赏鸟类，被看成爱情的象征。2016年12月31日在陕西洋县境内拍摄。',
    img: '/upload/14836015203016632036435443952981.jpg' } ]
[0mGET / [36m304 [0m45.395 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.780 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.489 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.612 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.356 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.426 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m59.596 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.584 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m2.208 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.183 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.251 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m5.826 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.418 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.503 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.461 ms - -[0m
[0mGET /article/index [36m304 [0m53.755 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.942 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.850 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.483 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.694 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.648 ms - -[0m
上传================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 4931,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 2426,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3072,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 75384,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 75385,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 56147 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 4931,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 2426,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3072,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 75384,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 75385,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 56147 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '48630',
     origin: 'http://localhost:9000',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryA6FL17B9JBBlrF5w',
     accept: '*/*',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '48630',
     'Origin',
     'http://localhost:9000',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'multipart/form-data; boundary=----WebKitFormBoundaryA6FL17B9JBBlrF5w',
     'Accept',
     '*/*',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 4931,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 2426,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 3072,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 75384,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 75385,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 56147 } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/upload',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/upload',
     path: '/article/upload',
     href: '/article/upload',
     _raw: '/article/upload' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 2426,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 75385,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 2426,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 75385,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 18696, 90586126 ],
  _startTime: 2017-01-05T07:38:31.225Z,
  _remoteAddress: '::1',
  body: {},
  secret: undefined,
  cookies: {},
  signedCookies: {},
  route: 
   Route {
     path: '/article/upload',
     stack: [ [Object] ],
     methods: { post: true } } }
========== {} { myfile: 
   File {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     size: 48431,
     path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_f6071738ca389926fee3f1f24f54e734',
     name: '2523423166228974104.jpg',
     type: 'image/jpeg',
     hash: null,
     lastModifiedDate: 2017-01-05T07:38:31.274Z,
     _writeStream: 
      WriteStream {
        _writableState: [Object],
        writable: false,
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_f6071738ca389926fee3f1f24f54e734',
        fd: null,
        flags: 'w',
        mode: 438,
        start: undefined,
        autoClose: true,
        pos: undefined,
        bytesWritten: 48431,
        closed: true } } }
[0mPOST /article/upload [32m200 [0m60.516 ms - 44[0m
[0mGET /upload/14836019112762523423166228974104.jpg [32m200 [0m9.895 ms - 48431[0m
================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3346,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 48713,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1222,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2751,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56275 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3346,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 48713,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1222,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2751,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56275 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '2420',
     accept: 'application/json, text/javascript, */*; q=0.01',
     origin: 'http://localhost:9000',
     'x-requested-with': 'XMLHttpRequest',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '2420',
     'Accept',
     'application/json, text/javascript, */*; q=0.01',
     'Origin',
     'http://localhost:9000',
     'X-Requested-With',
     'XMLHttpRequest',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/add',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3346,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 48713,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1222,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2751,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56275 } },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/add',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/add',
     path: '/article/add',
     href: '/article/add',
     _raw: '/article/add' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 48713,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 2751,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 48713,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 2751,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 18698, 981559564 ],
  _startTime: 2017-01-05T07:38:34.117Z,
  _remoteAddress: '::ffff:127.0.0.1',
  body: { params: '{"title":"精美的玻璃艺术","author":"午美","type":3,"content":"来自美国的玻璃艺术家戴尔.切胡里(Dale Chihuly)，1941年生于华盛顿的塔科马，由于一次意外，让他的左眼戴上了标志性的黑眼罩，充满激情的切胡里与他的工作团队做出来的令人震撼的前所未有的惊艳作品，用透明的，色彩鲜艳的玻璃作为媒介创作出来的艺术品造型奔放、大胆。\\n\\n  切胡里的早期作品蕴涵着丰富的自然元素。切胡里所有的作品都带有强烈、鲜明的色彩及细微的线条装饰。他的作品中的海洋系列、花车系列及吊灯系列的灵感全都来自于童年在华盛顿海边生活的回忆，中国玻璃协会网站上展示的下面这几个系列已经成为了他的标志性的作品。","img":"/upload/14836019112762523423166228974104.jpg"}' },
  _body: true,
  length: undefined,
  read: [Function],
  secret: undefined,
  cookies: {},
  signedCookies: {},
  route: 
   Route {
     path: '/article/add',
     stack: [ [Object] ],
     methods: { post: true } } }
{ title: '精美的玻璃艺术',
  author: '午美',
  type: 3,
  content: '来自美国的玻璃艺术家戴尔.切胡里(Dale Chihuly)，1941年生于华盛顿的塔科马，由于一次意外，让他的左眼戴上了标志性的黑眼罩，充满激情的切胡里与他的工作团队做出来的令人震撼的前所未有的惊艳作品，用透明的，色彩鲜艳的玻璃作为媒介创作出来的艺术品造型奔放、大胆。\n\n  切胡里的早期作品蕴涵着丰富的自然元素。切胡里所有的作品都带有强烈、鲜明的色彩及细微的线条装饰。他的作品中的海洋系列、花车系列及吊灯系列的灵感全都来自于童年在华盛顿海边生活的回忆，中国玻璃协会网站上展示的下面这几个系列已经成为了他的标志性的作品。',
  img: '/upload/14836019112762523423166228974104.jpg' }
----- { result: { ok: 1, n: 1 },
  ops: 
   [ { title: '精美的玻璃艺术',
       author: '午美',
       type: 3,
       content: '来自美国的玻璃艺术家戴尔.切胡里(Dale Chihuly)，1941年生于华盛顿的塔科马，由于一次意外，让他的左眼戴上了标志性的黑眼罩，充满激情的切胡里与他的工作团队做出来的令人震撼的前所未有的惊艳作品，用透明的，色彩鲜艳的玻璃作为媒介创作出来的艺术品造型奔放、大胆。\n\n  切胡里的早期作品蕴涵着丰富的自然元素。切胡里所有的作品都带有强烈、鲜明的色彩及细微的线条装饰。他的作品中的海洋系列、花车系列及吊灯系列的灵感全都来自于童年在华盛顿海边生活的回忆，中国玻璃协会网站上展示的下面这几个系列已经成为了他的标志性的作品。',
       img: '/upload/14836019112762523423166228974104.jpg',
       _id: 586df7fa5f40b5275ccba37b } ],
  insertedCount: 1,
  insertedIds: [ 586df7fa5f40b5275ccba37b ] }
[0mPOST /article/add [32m200 [0m108.451 ms - 11[0m
==列表===
[0mGET /article/list [32m200 [0m677.031 ms - 3675[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m2.107 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.034 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m2.180 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.497 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.426 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.421 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.485 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.691 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m0.495 ms - -[0m
[0mGET /article/index [36m304 [0m283.510 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.488 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m6.258 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.857 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.888 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m2.179 ms - -[0m
上传================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 1359,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 484,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 1854,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 59502,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 59502,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56274 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 1359,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 484,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 1854,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 59502,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 59502,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56274 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '222128',
     origin: 'http://localhost:9000',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryvlcBiuSBD1XS7iYm',
     accept: '*/*',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '222128',
     'Origin',
     'http://localhost:9000',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'multipart/form-data; boundary=----WebKitFormBoundaryvlcBiuSBD1XS7iYm',
     'Accept',
     '*/*',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 1359,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 484,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 1854,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 59502,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 59502,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56274 } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/upload',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/upload',
     path: '/article/upload',
     href: '/article/upload',
     _raw: '/article/upload' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 484,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 59502,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 484,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 59502,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 18794, 358365026 ],
  _startTime: 2017-01-05T07:40:09.494Z,
  _remoteAddress: '::ffff:127.0.0.1',
  body: {},
  secret: undefined,
  cookies: {},
  signedCookies: {},
  route: 
   Route {
     path: '/article/upload',
     stack: [ [Object] ],
     methods: { post: true } } }
========== {} { myfile: 
   File {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     size: 221929,
     path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_c3b4eb503bd434c854e910d386ec1093',
     name: '6631873707723035542.jpg',
     type: 'image/jpeg',
     hash: null,
     lastModifiedDate: 2017-01-05T07:40:09.589Z,
     _writeStream: 
      WriteStream {
        _writableState: [Object],
        writable: false,
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_c3b4eb503bd434c854e910d386ec1093',
        fd: null,
        flags: 'w',
        mode: 438,
        start: undefined,
        autoClose: true,
        pos: undefined,
        bytesWritten: 221929,
        closed: true } } }
[0mPOST /article/upload [32m200 [0m113.736 ms - 44[0m
[0mGET /upload/14836020095936631873707723035542.jpg [32m200 [0m20.391 ms - 221929[0m
================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3760,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 222213,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 1577,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56469 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3760,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 222213,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 1577,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56469 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '2834',
     accept: 'application/json, text/javascript, */*; q=0.01',
     origin: 'http://localhost:9000',
     'x-requested-with': 'XMLHttpRequest',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '2834',
     'Accept',
     'application/json, text/javascript, */*; q=0.01',
     'Origin',
     'http://localhost:9000',
     'X-Requested-With',
     'XMLHttpRequest',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/add',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 3760,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 222213,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 1577,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56469 } },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/add',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/add',
     path: '/article/add',
     href: '/article/add',
     _raw: '/article/add' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 222213,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1577,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 222213,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1577,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 18796, 121820614 ],
  _startTime: 2017-01-05T07:40:11.258Z,
  _remoteAddress: '::ffff:127.0.0.1',
  body: { params: '{"title":"奥运圣火点燃之地奥林匹亚-希腊游记","author":"爱旅行","type":3,"content":"在世界上每四年举办一届的奥运会，是全世界瞩目的盛会。每次盛会开始前举行圣火点燃仪式的地方，都会吸引世界的目光，那就是奥林匹亚。奥林匹亚遗址在伯罗奔尼撒半岛西部的山谷里，阿尔菲奥斯河北岸（距河口16公里），伊利亚洲境内。那里距离首都雅典约370公里，坐落在克洛诺斯树木繁茂、绿草如茵的山麓，是古希腊的圣地。自从史前时代以来就有人居住。在公元前10世纪，这里是奥林匹亚古代厄利斯用以祭拜宙斯的一个宗教中心。在这里有古代世界最重要的建筑杰作。除了庙宇以外，还保留着专供奥运会使用的各种体育设施。开始于公元前776年的奥运会每四年在奥林匹亚举行一次。这就是点燃圣火的地方，赫拉神庙","img":"/upload/14836020095936631873707723035542.jpg"}' },
  _body: true,
  length: undefined,
  read: [Function],
  secret: undefined,
  cookies: {},
  signedCookies: {},
  route: 
   Route {
     path: '/article/add',
     stack: [ [Object] ],
     methods: { post: true } } }
{ title: '奥运圣火点燃之地奥林匹亚-希腊游记',
  author: '爱旅行',
  type: 3,
  content: '在世界上每四年举办一届的奥运会，是全世界瞩目的盛会。每次盛会开始前举行圣火点燃仪式的地方，都会吸引世界的目光，那就是奥林匹亚。奥林匹亚遗址在伯罗奔尼撒半岛西部的山谷里，阿尔菲奥斯河北岸（距河口16公里），伊利亚洲境内。那里距离首都雅典约370公里，坐落在克洛诺斯树木繁茂、绿草如茵的山麓，是古希腊的圣地。自从史前时代以来就有人居住。在公元前10世纪，这里是奥林匹亚古代厄利斯用以祭拜宙斯的一个宗教中心。在这里有古代世界最重要的建筑杰作。除了庙宇以外，还保留着专供奥运会使用的各种体育设施。开始于公元前776年的奥运会每四年在奥林匹亚举行一次。这就是点燃圣火的地方，赫拉神庙',
  img: '/upload/14836020095936631873707723035542.jpg' }
----- { result: { ok: 1, n: 1 },
  ops: 
   [ { title: '奥运圣火点燃之地奥林匹亚-希腊游记',
       author: '爱旅行',
       type: 3,
       content: '在世界上每四年举办一届的奥运会，是全世界瞩目的盛会。每次盛会开始前举行圣火点燃仪式的地方，都会吸引世界的目光，那就是奥林匹亚。奥林匹亚遗址在伯罗奔尼撒半岛西部的山谷里，阿尔菲奥斯河北岸（距河口16公里），伊利亚洲境内。那里距离首都雅典约370公里，坐落在克洛诺斯树木繁茂、绿草如茵的山麓，是古希腊的圣地。自从史前时代以来就有人居住。在公元前10世纪，这里是奥林匹亚古代厄利斯用以祭拜宙斯的一个宗教中心。在这里有古代世界最重要的建筑杰作。除了庙宇以外，还保留着专供奥运会使用的各种体育设施。开始于公元前776年的奥运会每四年在奥林匹亚举行一次。这就是点燃圣火的地方，赫拉神庙',
       img: '/upload/14836020095936631873707723035542.jpg',
       _id: 586df85b25ae2a2a545382fa } ],
  insertedCount: 1,
  insertedIds: [ 586df85b25ae2a2a545382fa ] }
[0mPOST /article/add [32m200 [0m214.844 ms - 11[0m
==列表===
[0mGET /article/list [32m200 [0m688.598 ms - 4298[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m3.433 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.784 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.186 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.662 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.479 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.494 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m1.544 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.502 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m0.430 ms - -[0m
[0mGET /upload/14836020095936631873707723035542.jpg [36m304 [0m0.445 ms - -[0m
[0mGET /article/index [36m304 [0m228.357 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.456 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m5.708 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.225 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.681 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m3.635 ms - -[0m
上传================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 909,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 242,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 243,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 134482,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 134484,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 56870 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 909,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 242,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 243,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 134482,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 134484,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 56870 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '59850',
     origin: 'http://localhost:9000',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryLMJ0P6sHYjCqegpJ',
     accept: '*/*',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '59850',
     'Origin',
     'http://localhost:9000',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'multipart/form-data; boundary=----WebKitFormBoundaryLMJ0P6sHYjCqegpJ',
     'Accept',
     '*/*',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 909,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 242,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 243,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 134482,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 134484,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 56870 } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/upload',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/upload',
     path: '/article/upload',
     href: '/article/upload',
     _raw: '/article/upload' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 242,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 134484,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 242,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 134484,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 18974, 801109495 ],
  _startTime: 2017-01-05T07:43:09.940Z,
  _remoteAddress: '::1',
  body: {},
  secret: undefined,
  cookies: {},
  signedCookies: {},
  route: 
   Route {
     path: '/article/upload',
     stack: [ [Object] ],
     methods: { post: true } } }
========== {} { myfile: 
   File {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     size: 59646,
     path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_9b6cc3ef32f1a9a2b45949fcf6a91829',
     name: '900x600_BAVIOMN35D9M0095.jpg',
     type: 'image/jpeg',
     hash: null,
     lastModifiedDate: 2017-01-05T07:43:10.006Z,
     _writeStream: 
      WriteStream {
        _writableState: [Object],
        writable: false,
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_9b6cc3ef32f1a9a2b45949fcf6a91829',
        fd: null,
        flags: 'w',
        mode: 438,
        start: undefined,
        autoClose: true,
        pos: undefined,
        bytesWritten: 59646,
        closed: true } } }
[0mPOST /article/upload [32m200 [0m80.949 ms - 49[0m
[0mGET /upload/1483602190011900x600_BAVIOMN35D9M0095.jpg [32m200 [0m10.494 ms - 59646[0m
================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 2440,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 59928,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1130,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2301,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 56900 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 2440,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 59928,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1130,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2301,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 56900 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '1509',
     accept: 'application/json, text/javascript, */*; q=0.01',
     origin: 'http://localhost:9000',
     'x-requested-with': 'XMLHttpRequest',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '1509',
     'Accept',
     'application/json, text/javascript, */*; q=0.01',
     'Origin',
     'http://localhost:9000',
     'X-Requested-With',
     'XMLHttpRequest',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/add',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 2440,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 59928,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1130,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2301,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 56900 } },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/add',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/add',
     path: '/article/add',
     href: '/article/add',
     _raw: '/article/add' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 59928,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 2301,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 59928,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 2301,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 18977, 357199173 ],
  _startTime: 2017-01-05T07:43:12.496Z,
  _remoteAddress: '::1',
  body: { params: '{"title":"25岁瑜伽女孩用镜头记录美好身体","author":"瑜伽","type":3,"content":"25 岁女孩，Nude Yoga Girl，匿名在社交网站上裸体呈现各式瑜伽动作，以黑白影像的方式表现身体的美感，短短几个月就已经得到了近 8 万个粉丝，各式高难度的瑜伽动作看了实在让人瞬间有好多感受，先是为人体动作的可能性感到不可思议，再来又为她身体的优美线条大大赞赏，最后又想，这些照片是谁拍的？","img":"/upload/1483602190011900x600_BAVIOMN35D9M0095.jpg"}' },
  _body: true,
  length: undefined,
  read: [Function],
  secret: undefined,
  cookies: {},
  signedCookies: {},
  route: 
   Route {
     path: '/article/add',
     stack: [ [Object] ],
     methods: { post: true } } }
{ title: '25岁瑜伽女孩用镜头记录美好身体',
  author: '瑜伽',
  type: 3,
  content: '25 岁女孩，Nude Yoga Girl，匿名在社交网站上裸体呈现各式瑜伽动作，以黑白影像的方式表现身体的美感，短短几个月就已经得到了近 8 万个粉丝，各式高难度的瑜伽动作看了实在让人瞬间有好多感受，先是为人体动作的可能性感到不可思议，再来又为她身体的优美线条大大赞赏，最后又想，这些照片是谁拍的？',
  img: '/upload/1483602190011900x600_BAVIOMN35D9M0095.jpg' }
----- { result: { ok: 1, n: 1 },
  ops: 
   [ { title: '25岁瑜伽女孩用镜头记录美好身体',
       author: '瑜伽',
       type: 3,
       content: '25 岁女孩，Nude Yoga Girl，匿名在社交网站上裸体呈现各式瑜伽动作，以黑白影像的方式表现身体的美感，短短几个月就已经得到了近 8 万个粉丝，各式高难度的瑜伽动作看了实在让人瞬间有好多感受，先是为人体动作的可能性感到不可思议，再来又为她身体的优美线条大大赞赏，最后又想，这些照片是谁拍的？',
       img: '/upload/1483602190011900x600_BAVIOMN35D9M0095.jpg',
       _id: 586df910f28a8b29b8629cc4 } ],
  insertedCount: 1,
  insertedIds: [ 586df910f28a8b29b8629cc4 ] }
[0mPOST /article/add [32m200 [0m120.271 ms - 11[0m
==列表===
[0mGET /article/list [32m200 [0m698.098 ms - 4921[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m3.650 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m2.834 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.515 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m3.582 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m2.459 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.748 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.352 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.516 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m0.415 ms - -[0m
[0mGET /upload/14836020095936631873707723035542.jpg [36m304 [0m0.498 ms - -[0m
[0mGET /upload/1483602190011900x600_BAVIOMN35D9M0095.jpg [36m304 [0m0.566 ms - -[0m
[0mGET /article/index [36m304 [0m229.456 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m2.223 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.447 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m9.182 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.771 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m4.384 ms - -[0m
上传================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 2246,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 969,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 3,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 3,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 67855,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 30983,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 30985,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56901 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 2246,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 969,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 3,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 3,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 67855,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 30983,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 30985,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56901 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '388170',
     origin: 'http://localhost:9000',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryClCMgZvspi0Z9VsF',
     accept: '*/*',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '388170',
     'Origin',
     'http://localhost:9000',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'multipart/form-data; boundary=----WebKitFormBoundaryClCMgZvspi0Z9VsF',
     'Accept',
     '*/*',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 2246,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 969,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 3,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 3,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 67855,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 30983,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 30985,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56901 } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/upload',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/upload',
     path: '/article/upload',
     href: '/article/upload',
     _raw: '/article/upload' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 969,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 30985,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 969,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 30985,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 19030, 706579811 ],
  _startTime: 2017-01-05T07:44:05.845Z,
  _remoteAddress: '::ffff:127.0.0.1',
  body: {},
  secret: undefined,
  cookies: {},
  signedCookies: {},
  route: 
   Route {
     path: '/article/upload',
     stack: [ [Object] ],
     methods: { post: true } } }
========== {} { myfile: 
   File {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     size: 387974,
     path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_9d1aaa6c031b3ed3a56f2ac12412801d',
     name: 'BA0E79QV5D9M0095.jpg',
     type: 'image/jpeg',
     hash: null,
     lastModifiedDate: 2017-01-05T07:44:05.907Z,
     _writeStream: 
      WriteStream {
        _writableState: [Object],
        writable: false,
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_9d1aaa6c031b3ed3a56f2ac12412801d',
        fd: null,
        flags: 'w',
        mode: 438,
        start: undefined,
        autoClose: true,
        pos: undefined,
        bytesWritten: 387974,
        closed: true } } }
[0mPOST /article/upload [32m200 [0m75.166 ms - 41[0m
[0mGET /upload/1483602245912BA0E79QV5D9M0095.jpg [32m200 [0m13.088 ms - 387974[0m
================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 1753,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 388258,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1220,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2792,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56953 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 1753,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 388258,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1220,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2792,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56953 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '831',
     accept: 'application/json, text/javascript, */*; q=0.01',
     origin: 'http://localhost:9000',
     'x-requested-with': 'XMLHttpRequest',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '831',
     'Accept',
     'application/json, text/javascript, */*; q=0.01',
     'Origin',
     'http://localhost:9000',
     'X-Requested-With',
     'XMLHttpRequest',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/add',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 1753,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 388258,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1220,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2792,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56953 } },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/add',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/add',
     path: '/article/add',
     href: '/article/add',
     _raw: '/article/add' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 388258,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 2792,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 388258,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 2792,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 19033, 646032929 ],
  _startTime: 2017-01-05T07:44:08.785Z,
  _remoteAddress: '::ffff:127.0.0.1',
  body: { params: '{"title":"时装设计师与他们的“灵感缪斯”","author":"","type":3,"content":"设计师与模特的关系，像极了导演与演员的关系，这种共生的关系可以让他们都成就非凡。然而，你却很难说清楚到底是谁成就了谁。","img":"/upload/1483602245912BA0E79QV5D9M0095.jpg"}' },
  _body: true,
  length: undefined,
  read: [Function],
  secret: undefined,
  cookies: {},
  signedCookies: {},
  route: 
   Route {
     path: '/article/add',
     stack: [ [Object] ],
     methods: { post: true } } }
{ title: '时装设计师与他们的“灵感缪斯”',
  author: '',
  type: 3,
  content: '设计师与模特的关系，像极了导演与演员的关系，这种共生的关系可以让他们都成就非凡。然而，你却很难说清楚到底是谁成就了谁。',
  img: '/upload/1483602245912BA0E79QV5D9M0095.jpg' }
----- { result: { ok: 1, n: 1 },
  ops: 
   [ { title: '时装设计师与他们的“灵感缪斯”',
       author: '',
       type: 3,
       content: '设计师与模特的关系，像极了导演与演员的关系，这种共生的关系可以让他们都成就非凡。然而，你却很难说清楚到底是谁成就了谁。',
       img: '/upload/1483602245912BA0E79QV5D9M0095.jpg',
       _id: 586df9485eeda7075c840ef9 } ],
  insertedCount: 1,
  insertedIds: [ 586df9485eeda7075c840ef9 ] }
[0mPOST /article/add [32m200 [0m144.051 ms - 11[0m
==列表===
[0mGET /article/list [32m200 [0m667.933 ms - 5537[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m2.043 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.071 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.606 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.501 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.758 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.519 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.416 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.379 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m0.394 ms - -[0m
[0mGET /upload/1483602245912BA0E79QV5D9M0095.jpg [36m304 [0m1.390 ms - -[0m
[0mGET /upload/14836020095936631873707723035542.jpg [36m304 [0m0.400 ms - -[0m
[0mGET /upload/1483602190011900x600_BAVIOMN35D9M0095.jpg [36m304 [0m1.328 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m158.448 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m2.153 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.439 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m3.202 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.066 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m4.235 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.463 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.899 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.531 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m0.649 ms - -[0m
[0mGET /upload/1483602245912BA0E79QV5D9M0095.jpg [36m304 [0m0.438 ms - -[0m
[0mGET /upload/14836020095936631873707723035542.jpg [36m304 [0m0.492 ms - -[0m
[0mGET /upload/1483602190011900x600_BAVIOMN35D9M0095.jpg [36m304 [0m0.710 ms - -[0m
[0mGET /article/index [36m304 [0m87.369 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.872 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m2.130 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m6.134 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.453 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m4.084 ms - -[0m
上传================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 4493,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 395187,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 731,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 21900,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 21905,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56953 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 4493,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 395187,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 731,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 21900,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 21905,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56953 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '12146',
     origin: 'http://localhost:9000',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundaryUuZBdQKBhACVn4OJ',
     accept: '*/*',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '12146',
     'Origin',
     'http://localhost:9000',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'multipart/form-data; boundary=----WebKitFormBoundaryUuZBdQKBhACVn4OJ',
     'Accept',
     '*/*',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 4493,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 395187,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 731,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 21900,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: null,
        _peername: [Object] },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 21905,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::ffff:127.0.0.1', family: 'IPv6', port: 56953 } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/upload',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/upload',
     path: '/article/upload',
     href: '/article/upload',
     _raw: '/article/upload' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 395187,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 21905,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 395187,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 21905,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 19138, 367056901 ],
  _startTime: 2017-01-05T07:45:53.507Z,
  _remoteAddress: '::ffff:127.0.0.1',
  body: {},
  secret: undefined,
  cookies: {},
  signedCookies: {},
  route: 
   Route {
     path: '/article/upload',
     stack: [ [Object] ],
     methods: { post: true } } }
========== {} { myfile: 
   File {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     size: 11947,
     path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_464e8fc2229ae72f55ccb332ce645653',
     name: '201601151014545f538.jpg',
     type: 'image/jpeg',
     hash: null,
     lastModifiedDate: 2017-01-05T07:45:53.548Z,
     _writeStream: 
      WriteStream {
        _writableState: [Object],
        writable: false,
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_464e8fc2229ae72f55ccb332ce645653',
        fd: null,
        flags: 'w',
        mode: 438,
        start: undefined,
        autoClose: true,
        pos: undefined,
        bytesWritten: 11947,
        closed: true } } }
[0mPOST /article/upload [32m200 [0m52.405 ms - 44[0m
上传================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: null,
     ended: false,
     endEmitted: false,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: true,
     decoder: null,
     encoding: null },
  readable: true,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 33245,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 30945,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 57208 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 33245,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 30945,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 57208 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: false,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '186344',
     origin: 'http://localhost:9000',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'multipart/form-data; boundary=----WebKitFormBoundarymMPQiRYW1kWUPhIl',
     accept: '*/*',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '186344',
     'Origin',
     'http://localhost:9000',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'multipart/form-data; boundary=----WebKitFormBoundarymMPQiRYW1kWUPhIl',
     'Accept',
     '*/*',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/upload',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 33245,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 30945,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 57208 } },
  _consuming: false,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/upload',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/upload',
     path: '/article/upload',
     href: '/article/upload',
     _raw: '/article/upload' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 30945,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 30945,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 19169, 491139241 ],
  _startTime: 2017-01-05T07:46:24.631Z,
  _remoteAddress: '::1',
  body: {},
  secret: undefined,
  cookies: {},
  signedCookies: {},
  route: 
   Route {
     path: '/article/upload',
     stack: [ [Object] ],
     methods: { post: true } } }
========== {} { myfile: 
   File {
     domain: null,
     _events: {},
     _eventsCount: 0,
     _maxListeners: undefined,
     size: 186145,
     path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_5347500ff65bca8d738775e80edf61fe',
     name: '6631912190629661375.jpg',
     type: 'image/jpeg',
     hash: null,
     lastModifiedDate: 2017-01-05T07:46:24.727Z,
     _writeStream: 
      WriteStream {
        _writableState: [Object],
        writable: false,
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        path: 'C:\\Users\\ZHANGY~1\\AppData\\Local\\Temp\\upload_5347500ff65bca8d738775e80edf61fe',
        fd: null,
        flags: 'w',
        mode: 438,
        start: undefined,
        autoClose: true,
        pos: undefined,
        bytesWritten: 186145,
        closed: true } } }
[0mGET /upload/14836023847336631912190629661375.jpg [32m200 [0m15.517 ms - 186145[0m
================ IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 8081,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 186429,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1235,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2876,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 57210 } },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 8081,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 186429,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1235,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2876,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 57210 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'localhost:9000',
     connection: 'keep-alive',
     'content-length': '7155',
     accept: 'application/json, text/javascript, */*; q=0.01',
     origin: 'http://localhost:9000',
     'x-requested-with': 'XMLHttpRequest',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://localhost:9000/article/index',
     'accept-encoding': 'gzip, deflate, br',
     'accept-language': 'zh-CN,zh;q=0.8,en;q=0.6' },
  rawHeaders: 
   [ 'Host',
     'localhost:9000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '7155',
     'Accept',
     'application/json, text/javascript, */*; q=0.01',
     'Origin',
     'http://localhost:9000',
     'X-Requested-With',
     'XMLHttpRequest',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.75 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Referer',
     'http://localhost:9000/article/index',
     'Accept-Encoding',
     'gzip, deflate, br',
     'Accept-Language',
     'zh-CN,zh;q=0.8,en;q=0.6' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/article/add',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        bytesRead: 8081,
        _externalStream: {},
        fd: -1,
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0 },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        drain: [Object],
        timeout: [Function],
        error: [Object],
        close: [Object],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     destroyed: false,
     _bytesDispatched: 186429,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '6::::9000' },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 1235,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000 },
     _idleStart: 2876,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: [Function: updateOutgoingData],
        req: [Circular],
        locals: {},
        _startAt: undefined,
        _startTime: undefined,
        writeHead: [Function: writeHead],
        __onFinished: [Object] },
     _peername: { address: '::1', family: 'IPv6', port: 57210 } },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/article/add',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/article/add',
     path: '/article/add',
     href: '/article/add',
     _raw: '/article/add' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Object], end: [Function: onevent] },
     _eventsCount: 2,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedHeader: {},
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 186429,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 2876,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        _bytesDispatched: 186429,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 2876,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        read: [Function],
        _consuming: true,
        _httpMessage: [Circular],
        _peername: [Object] },
     _header: null,
     _headers: { 'x-powered-by': 'Express' },
     _headerNames: { 'x-powered-by': 'X-Powered-By' },
     _onPendingData: [Function: updateOutgoingData],
     req: [Circular],
     locals: {},
     _startAt: undefined,
     _startTime: undefined,
     writeHead: [Function: writeHead],
     __onFinished: { [Function: listener] queue: [Object] } },
  _startAt: [ 19172, 568071039 ],
  _startTime: 2017-01-05T07:46:27.708Z,
  _remoteAddress: '::1',
  body: { params: '{"title":"美人鱼：周星驰还是不懂爱情","author":"周星星","type":3,"content":"去影院前就想着，周星驰的片子看完可以写点什么。回来后，反而好长时间不知从哪写起，就像约会前兜里就藏着避孕套，有种掩饰不住的图谋不轨，结果把约会的氛围都败坏了。\\n\\n所以，还是不说电影了，说说周星驰电影里的美女和爱情。\\n\\n《美人鱼》里两位美女。一个有钱有貌，身材好到上下都是宝。不用多说，她是蛇蝎心肠的反派。一个相貌平平，胸部都被碾压过似的。不用多说，她必然内心善良，百万支票可以瞬间弹指燃灰。\\n\\n如果不是加上人鱼的新鲜元素。电影里这俩女性角色的对比和配置，实在是传统到土掉渣。可这，就是很多混出成就的穷小子对于女性，或者对于爱情的全部感知吧。\\n\\n爱情，对于要挣扎出底层的穷小子来说，从来是奢侈品。因为时间有限，他们来不及、也不愿去细细体味女孩的内心（除非是要走伟大先驱嫪毐那一路的）。他们对女性的感悟停留表面，对爱情的理解粗糙。\\n\\n因为上帝是公平的，一个底层奋斗挣扎出的人，还要风流倜傥知冷知热，怎么可能？生活又不是网络YY小说。\\n\\n周星驰就是奋斗出来的穷小子。他接受采访时，谈到曾经的那“一段真挚的感情”，他说自己“运气不好”，那段时间最忙；如果可以重来的话，就不要那么忙了。\\n\\n可是如果真的重来，我想他还是会那么忙，还是会错过。因为他是周星驰。有些人的命运是注定的，人性也是注定的；周星驰电影里的爱情套路，因而也是注定的。\\n\\n他电影里的爱情，不是点缀，就是悲催。  \\n\\n点缀是因为周星驰电影里的主角，就像年少的他一样，小人物有大理想大志向，很忙为了摆脱很穷。他需要美女，却没有时间善待，所以爱情只能成为副线，当男主角功成名就之后，顺其自然抱得美人归。\\n\\n很多电影里都这样把女性当作人生“奖品”，周星驰的不同在于，他更理解生活的现实，更擅长用荒诞手法表现出来。他知道，无论怎样奋斗成人生赢家，也不可能得到一个内外兼修的美人，有魔鬼身材，又有天使的心。","img":"/upload/14836023847336631912190629661375.jpg"}' },
  _body: true,
  length: undefined,
  read: [Function],
  secret: undefined,
  cookies: {},
  signedCookies: {},
  route: 
   Route {
     path: '/article/add',
     stack: [ [Object] ],
     methods: { post: true } } }
{ title: '美人鱼：周星驰还是不懂爱情',
  author: '周星星',
  type: 3,
  content: '去影院前就想着，周星驰的片子看完可以写点什么。回来后，反而好长时间不知从哪写起，就像约会前兜里就藏着避孕套，有种掩饰不住的图谋不轨，结果把约会的氛围都败坏了。\n\n所以，还是不说电影了，说说周星驰电影里的美女和爱情。\n\n《美人鱼》里两位美女。一个有钱有貌，身材好到上下都是宝。不用多说，她是蛇蝎心肠的反派。一个相貌平平，胸部都被碾压过似的。不用多说，她必然内心善良，百万支票可以瞬间弹指燃灰。\n\n如果不是加上人鱼的新鲜元素。电影里这俩女性角色的对比和配置，实在是传统到土掉渣。可这，就是很多混出成就的穷小子对于女性，或者对于爱情的全部感知吧。\n\n爱情，对于要挣扎出底层的穷小子来说，从来是奢侈品。因为时间有限，他们来不及、也不愿去细细体味女孩的内心（除非是要走伟大先驱嫪毐那一路的）。他们对女性的感悟停留表面，对爱情的理解粗糙。\n\n因为上帝是公平的，一个底层奋斗挣扎出的人，还要风流倜傥知冷知热，怎么可能？生活又不是网络YY小说。\n\n周星驰就是奋斗出来的穷小子。他接受采访时，谈到曾经的那“一段真挚的感情”，他说自己“运气不好”，那段时间最忙；如果可以重来的话，就不要那么忙了。\n\n可是如果真的重来，我想他还是会那么忙，还是会错过。因为他是周星驰。有些人的命运是注定的，人性也是注定的；周星驰电影里的爱情套路，因而也是注定的。\n\n他电影里的爱情，不是点缀，就是悲催。  \n\n点缀是因为周星驰电影里的主角，就像年少的他一样，小人物有大理想大志向，很忙为了摆脱很穷。他需要美女，却没有时间善待，所以爱情只能成为副线，当男主角功成名就之后，顺其自然抱得美人归。\n\n很多电影里都这样把女性当作人生“奖品”，周星驰的不同在于，他更理解生活的现实，更擅长用荒诞手法表现出来。他知道，无论怎样奋斗成人生赢家，也不可能得到一个内外兼修的美人，有魔鬼身材，又有天使的心。',
  img: '/upload/14836023847336631912190629661375.jpg' }
----- { result: { ok: 1, n: 1 },
  ops: 
   [ { title: '美人鱼：周星驰还是不懂爱情',
       author: '周星星',
       type: 3,
       content: '去影院前就想着，周星驰的片子看完可以写点什么。回来后，反而好长时间不知从哪写起，就像约会前兜里就藏着避孕套，有种掩饰不住的图谋不轨，结果把约会的氛围都败坏了。\n\n所以，还是不说电影了，说说周星驰电影里的美女和爱情。\n\n《美人鱼》里两位美女。一个有钱有貌，身材好到上下都是宝。不用多说，她是蛇蝎心肠的反派。一个相貌平平，胸部都被碾压过似的。不用多说，她必然内心善良，百万支票可以瞬间弹指燃灰。\n\n如果不是加上人鱼的新鲜元素。电影里这俩女性角色的对比和配置，实在是传统到土掉渣。可这，就是很多混出成就的穷小子对于女性，或者对于爱情的全部感知吧。\n\n爱情，对于要挣扎出底层的穷小子来说，从来是奢侈品。因为时间有限，他们来不及、也不愿去细细体味女孩的内心（除非是要走伟大先驱嫪毐那一路的）。他们对女性的感悟停留表面，对爱情的理解粗糙。\n\n因为上帝是公平的，一个底层奋斗挣扎出的人，还要风流倜傥知冷知热，怎么可能？生活又不是网络YY小说。\n\n周星驰就是奋斗出来的穷小子。他接受采访时，谈到曾经的那“一段真挚的感情”，他说自己“运气不好”，那段时间最忙；如果可以重来的话，就不要那么忙了。\n\n可是如果真的重来，我想他还是会那么忙，还是会错过。因为他是周星驰。有些人的命运是注定的，人性也是注定的；周星驰电影里的爱情套路，因而也是注定的。\n\n他电影里的爱情，不是点缀，就是悲催。  \n\n点缀是因为周星驰电影里的主角，就像年少的他一样，小人物有大理想大志向，很忙为了摆脱很穷。他需要美女，却没有时间善待，所以爱情只能成为副线，当男主角功成名就之后，顺其自然抱得美人归。\n\n很多电影里都这样把女性当作人生“奖品”，周星驰的不同在于，他更理解生活的现实，更擅长用荒诞手法表现出来。他知道，无论怎样奋斗成人生赢家，也不可能得到一个内外兼修的美人，有魔鬼身材，又有天使的心。',
       img: '/upload/14836023847336631912190629661375.jpg',
       _id: 586df9d3c8869d2bf81b361e } ],
  insertedCount: 1,
  insertedIds: [ 586df9d3c8869d2bf81b361e ] }
[0mPOST /article/add [32m200 [0m154.025 ms - 11[0m
==列表===
[0mGET /article/list [32m200 [0m694.376 ms - 6150[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.573 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m4.863 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m4.615 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.895 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.542 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.707 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.658 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.585 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m1.589 ms - -[0m
[0mGET /upload/1483602245912BA0E79QV5D9M0095.jpg [36m304 [0m0.341 ms - -[0m
[0mGET /upload/14836020095936631873707723035542.jpg [36m304 [0m0.909 ms - -[0m
[0mGET /upload/1483602190011900x600_BAVIOMN35D9M0095.jpg [36m304 [0m2.046 ms - -[0m
[0mGET /upload/14836023847336631912190629661375.jpg [36m304 [0m0.571 ms - -[0m
[0mGET /article/update?id=586df9d3c8869d2bf81b361e [32m200 [0m226.366 ms - 5485[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.270 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.737 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.388 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m3.619 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m3.506 ms - -[0m
[0mGET /upload/14836023847336631912190629661375.jpg [36m304 [0m0.637 ms - -[0m
----- [ { _id: 586dedbd5505a828f02af177,
    title: '长城的美永远会超出你的想象',
    author: '大狗',
    type: 3,
    content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
    img: '/upload/14835992900846632113401257877779.jpg' },
  { _id: 586dea879363c323605fb8ec,
    title: '让姚明当篮协主席最大的阻力在哪？',
    author: '风清扬',
    type: 3,
    content: '新年伊始，《篮球先锋报》便曝出了一则令篮球迷们欢欣鼓舞的好消息——体育总局建议让姚明担任篮协主席并兼任男篮国家队主教练。而对于各大媒体的求证和追问，相关人士虽未证实，却也给出了“一切皆有可能”的答案。就此新华社撰文称，光有热情、知名度和管理经验，姚明入主篮协仍有障碍：资历和经验尚浅，“毕竟篮协从没有这么年轻的主席”。\n\n \n\n姚明的确有不适合当篮协主席的理由，比如首先由于姚明本人就是上海东方大鲨鱼俱乐部的老板，他可以兼任公司的董事长，却不太合适担任需要保持中立性的篮协主席。当然，在过渡阶段，加上姚明本人具有极高威望和地位，以他的人格魅力未必不能一试。至于男篮主教练，这是一个技术活，姚明退役后并没有从事教练职业。另外，出任篮协主席又会不会影响他作为上海俱乐部投资人的位置？\n\n \n\n但“太年轻资历浅”，这是一个不应该成为理由的理由。姚明今年37岁，也是快四十岁的人了，很多官场中人在这个年龄混得好的，也到正厅副部了。而这个年龄正是干事业的年龄，难道一定要一个懂做官但从未打过蓝球，甚至没有搞过体育的人才算是有“资历”。如果真是这样，就算是上面点头了，姚明本人也未必愿意，因为他会去体会和理解郎平当年回国接管女排时有多难。\n\n \n\n按照惯例，篮协主席以前一般由体育总局的官员担任，因此经常出现“外行管内行”的情况。现在国家提出“管办分离”，中国足协已经走在前面，篮球协会也要紧紧跟上。如果姚明当篮协主席，至少不会有“外行领导内行”的弊端；姚明当男篮主教练，再大牌的所谓“球星”也得服服帖帖，因为中国篮球没人能比姚明更大牌。可以说，姚明出山可最大限度避免中国篮球界的“内耗”，有利于整合各方力量迅速提高男篮的实力和战绩。\n\n \n\n另外，作为中国最成功的篮球运动员，姚明具备的影响力和号召力是不言而喻的，而在退役之后，姚明成为了上海男篮的老板，在NBA效力的经历使他视野开阔，他也一直试图推动CBA联赛的职业化改革。国家体育总局建议请姚明担任中国篮球协会主席，这不是“干涉内政”，而是着眼全局的建议——姚明有丰富的篮球经历，曾在美国打球有更开阔的视野，对篮球改革也有自己独到的见解。在目前的篮协主席候选人中，姚明无疑是最佳人选。',
    img: '/upload/14836013900236631886901862555933.jpg' },
  { _id: 586de9c89363c323605fb8eb,
    title: '野生鸳鸯更漂亮',
    author: '卡卡',
    type: 3,
    content: '鸳鸯，雌雄异色。雄鸟嘴红色，脚橙黄色，羽色鲜艳而华丽，非常奇特和醒目，野外极易辨认。雌鸟嘴黑色，脚橙黄色，头和整个上体灰褐色，亦极为醒目和独特。主要栖息于山地森林河流、湖泊、水塘、芦苇沼泽和稻田地中。杂食性。鸳鸯为中国著名的观赏鸟类，被看成爱情的象征。2016年12月31日在陕西洋县境内拍摄。',
    img: '/upload/14836015203016632036435443952981.jpg' },
  { _id: 586df7fa5f40b5275ccba37b,
    title: '精美的玻璃艺术',
    author: '午美',
    type: 3,
    content: '来自美国的玻璃艺术家戴尔.切胡里(Dale Chihuly)，1941年生于华盛顿的塔科马，由于一次意外，让他的左眼戴上了标志性的黑眼罩，充满激情的切胡里与他的工作团队做出来的令人震撼的前所未有的惊艳作品，用透明的，色彩鲜艳的玻璃作为媒介创作出来的艺术品造型奔放、大胆。\n\n  切胡里的早期作品蕴涵着丰富的自然元素。切胡里所有的作品都带有强烈、鲜明的色彩及细微的线条装饰。他的作品中的海洋系列、花车系列及吊灯系列的灵感全都来自于童年在华盛顿海边生活的回忆，中国玻璃协会网站上展示的下面这几个系列已经成为了他的标志性的作品。',
    img: '/upload/14836019112762523423166228974104.jpg' },
  { _id: 586df9485eeda7075c840ef9,
    title: '时装设计师与他们的“灵感缪斯”',
    author: '',
    type: 3,
    content: '设计师与模特的关系，像极了导演与演员的关系，这种共生的关系可以让他们都成就非凡。然而，你却很难说清楚到底是谁成就了谁。',
    img: '/upload/1483602245912BA0E79QV5D9M0095.jpg' },
  { _id: 586df85b25ae2a2a545382fa,
    title: '奥运圣火点燃之地奥林匹亚-希腊游记',
    author: '爱旅行',
    type: 3,
    content: '在世界上每四年举办一届的奥运会，是全世界瞩目的盛会。每次盛会开始前举行圣火点燃仪式的地方，都会吸引世界的目光，那就是奥林匹亚。奥林匹亚遗址在伯罗奔尼撒半岛西部的山谷里，阿尔菲奥斯河北岸（距河口16公里），伊利亚洲境内。那里距离首都雅典约370公里，坐落在克洛诺斯树木繁茂、绿草如茵的山麓，是古希腊的圣地。自从史前时代以来就有人居住。在公元前10世纪，这里是奥林匹亚古代厄利斯用以祭拜宙斯的一个宗教中心。在这里有古代世界最重要的建筑杰作。除了庙宇以外，还保留着专供奥运会使用的各种体育设施。开始于公元前776年的奥运会每四年在奥林匹亚举行一次。这就是点燃圣火的地方，赫拉神庙',
    img: '/upload/14836020095936631873707723035542.jpg' },
  { _id: 586df910f28a8b29b8629cc4,
    title: '25岁瑜伽女孩用镜头记录美好身体',
    author: '瑜伽',
    type: 3,
    content: '25 岁女孩，Nude Yoga Girl，匿名在社交网站上裸体呈现各式瑜伽动作，以黑白影像的方式表现身体的美感，短短几个月就已经得到了近 8 万个粉丝，各式高难度的瑜伽动作看了实在让人瞬间有好多感受，先是为人体动作的可能性感到不可思议，再来又为她身体的优美线条大大赞赏，最后又想，这些照片是谁拍的？',
    img: '/upload/1483602190011900x600_BAVIOMN35D9M0095.jpg' },
  { _id: 586df9d3c8869d2bf81b361e,
    title: '美人鱼：周星驰还是不懂爱情',
    author: '周星星',
    type: 3,
    content: '去影院前就想着，周星驰的片子看完可以写点什么。回来后，反而好长时间不知从哪写起，就像约会前兜里就藏着避孕套，有种掩饰不住的图谋不轨，结果把约会的氛围都败坏了。\n\n所以，还是不说电影了，说说周星驰电影里的美女和爱情。\n\n《美人鱼》里两位美女。一个有钱有貌，身材好到上下都是宝。不用多说，她是蛇蝎心肠的反派。一个相貌平平，胸部都被碾压过似的。不用多说，她必然内心善良，百万支票可以瞬间弹指燃灰。\n\n如果不是加上人鱼的新鲜元素。电影里这俩女性角色的对比和配置，实在是传统到土掉渣。可这，就是很多混出成就的穷小子对于女性，或者对于爱情的全部感知吧。\n\n爱情，对于要挣扎出底层的穷小子来说，从来是奢侈品。因为时间有限，他们来不及、也不愿去细细体味女孩的内心（除非是要走伟大先驱嫪毐那一路的）。他们对女性的感悟停留表面，对爱情的理解粗糙。\n\n因为上帝是公平的，一个底层奋斗挣扎出的人，还要风流倜傥知冷知热，怎么可能？生活又不是网络YY小说。\n\n周星驰就是奋斗出来的穷小子。他接受采访时，谈到曾经的那“一段真挚的感情”，他说自己“运气不好”，那段时间最忙；如果可以重来的话，就不要那么忙了。\n\n可是如果真的重来，我想他还是会那么忙，还是会错过。因为他是周星驰。有些人的命运是注定的，人性也是注定的；周星驰电影里的爱情套路，因而也是注定的。\n\n他电影里的爱情，不是点缀，就是悲催。  \n\n点缀是因为周星驰电影里的主角，就像年少的他一样，小人物有大理想大志向，很忙为了摆脱很穷。他需要美女，却没有时间善待，所以爱情只能成为副线，当男主角功成名就之后，顺其自然抱得美人归。\n\n很多电影里都这样把女性当作人生“奖品”，周星驰的不同在于，他更理解生活的现实，更擅长用荒诞手法表现出来。他知道，无论怎样奋斗成人生赢家，也不可能得到一个内外兼修的美人，有魔鬼身材，又有天使的心。',
    img: '/upload/14836023847336631912190629661375.jpg' } ]
[0mGET / [36m304 [0m47.853 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.423 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.634 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.499 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.477 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.476 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m58.975 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m2.912 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m4.248 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.374 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m9.404 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m3.079 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.613 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.449 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.396 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m1.527 ms - -[0m
[0mGET /upload/1483602245912BA0E79QV5D9M0095.jpg [36m304 [0m0.393 ms - -[0m
[0mGET /upload/14836020095936631873707723035542.jpg [36m304 [0m0.353 ms - -[0m
[0mGET /upload/1483602190011900x600_BAVIOMN35D9M0095.jpg [36m304 [0m0.796 ms - -[0m
[0mGET /upload/14836023847336631912190629661375.jpg [36m304 [0m0.375 ms - -[0m
[0mGET /article/update?id=586df7fa5f40b5275ccba37b [32m200 [0m62.217 ms - 3924[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m3.260 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.505 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.575 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.750 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.835 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m0.639 ms - -[0m
[0mGET /article/index [36m304 [0m52.635 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m2.309 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.662 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.871 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m6.459 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.418 ms - -[0m
[0mGET /comment/index [36m304 [0m17.566 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.393 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.617 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.674 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.398 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m4.079 ms - -[0m
[0mGET /member/index [36m304 [0m28.547 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.687 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.839 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.846 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m3.540 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.444 ms - -[0m
[0mGET /article/index [36m304 [0m61.021 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.985 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.438 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.793 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.773 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m3.078 ms - -[0m
[0mGET /article/index [36m304 [0m120.483 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m2.496 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m2.004 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.275 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m3.746 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.885 ms - -[0m
----- [ { _id: 586dedbd5505a828f02af177,
    title: '长城的美永远会超出你的想象',
    author: '大狗',
    type: 3,
    content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
    img: '/upload/14835992900846632113401257877779.jpg' },
  { _id: 586dea879363c323605fb8ec,
    title: '让姚明当篮协主席最大的阻力在哪？',
    author: '风清扬',
    type: 3,
    content: '新年伊始，《篮球先锋报》便曝出了一则令篮球迷们欢欣鼓舞的好消息——体育总局建议让姚明担任篮协主席并兼任男篮国家队主教练。而对于各大媒体的求证和追问，相关人士虽未证实，却也给出了“一切皆有可能”的答案。就此新华社撰文称，光有热情、知名度和管理经验，姚明入主篮协仍有障碍：资历和经验尚浅，“毕竟篮协从没有这么年轻的主席”。\n\n \n\n姚明的确有不适合当篮协主席的理由，比如首先由于姚明本人就是上海东方大鲨鱼俱乐部的老板，他可以兼任公司的董事长，却不太合适担任需要保持中立性的篮协主席。当然，在过渡阶段，加上姚明本人具有极高威望和地位，以他的人格魅力未必不能一试。至于男篮主教练，这是一个技术活，姚明退役后并没有从事教练职业。另外，出任篮协主席又会不会影响他作为上海俱乐部投资人的位置？\n\n \n\n但“太年轻资历浅”，这是一个不应该成为理由的理由。姚明今年37岁，也是快四十岁的人了，很多官场中人在这个年龄混得好的，也到正厅副部了。而这个年龄正是干事业的年龄，难道一定要一个懂做官但从未打过蓝球，甚至没有搞过体育的人才算是有“资历”。如果真是这样，就算是上面点头了，姚明本人也未必愿意，因为他会去体会和理解郎平当年回国接管女排时有多难。\n\n \n\n按照惯例，篮协主席以前一般由体育总局的官员担任，因此经常出现“外行管内行”的情况。现在国家提出“管办分离”，中国足协已经走在前面，篮球协会也要紧紧跟上。如果姚明当篮协主席，至少不会有“外行领导内行”的弊端；姚明当男篮主教练，再大牌的所谓“球星”也得服服帖帖，因为中国篮球没人能比姚明更大牌。可以说，姚明出山可最大限度避免中国篮球界的“内耗”，有利于整合各方力量迅速提高男篮的实力和战绩。\n\n \n\n另外，作为中国最成功的篮球运动员，姚明具备的影响力和号召力是不言而喻的，而在退役之后，姚明成为了上海男篮的老板，在NBA效力的经历使他视野开阔，他也一直试图推动CBA联赛的职业化改革。国家体育总局建议请姚明担任中国篮球协会主席，这不是“干涉内政”，而是着眼全局的建议——姚明有丰富的篮球经历，曾在美国打球有更开阔的视野，对篮球改革也有自己独到的见解。在目前的篮协主席候选人中，姚明无疑是最佳人选。',
    img: '/upload/14836013900236631886901862555933.jpg' },
  { _id: 586de9c89363c323605fb8eb,
    title: '野生鸳鸯更漂亮',
    author: '卡卡',
    type: 3,
    content: '鸳鸯，雌雄异色。雄鸟嘴红色，脚橙黄色，羽色鲜艳而华丽，非常奇特和醒目，野外极易辨认。雌鸟嘴黑色，脚橙黄色，头和整个上体灰褐色，亦极为醒目和独特。主要栖息于山地森林河流、湖泊、水塘、芦苇沼泽和稻田地中。杂食性。鸳鸯为中国著名的观赏鸟类，被看成爱情的象征。2016年12月31日在陕西洋县境内拍摄。',
    img: '/upload/14836015203016632036435443952981.jpg' },
  { _id: 586df7fa5f40b5275ccba37b,
    title: '精美的玻璃艺术',
    author: '午美',
    type: 3,
    content: '来自美国的玻璃艺术家戴尔.切胡里(Dale Chihuly)，1941年生于华盛顿的塔科马，由于一次意外，让他的左眼戴上了标志性的黑眼罩，充满激情的切胡里与他的工作团队做出来的令人震撼的前所未有的惊艳作品，用透明的，色彩鲜艳的玻璃作为媒介创作出来的艺术品造型奔放、大胆。\n\n  切胡里的早期作品蕴涵着丰富的自然元素。切胡里所有的作品都带有强烈、鲜明的色彩及细微的线条装饰。他的作品中的海洋系列、花车系列及吊灯系列的灵感全都来自于童年在华盛顿海边生活的回忆，中国玻璃协会网站上展示的下面这几个系列已经成为了他的标志性的作品。',
    img: '/upload/14836019112762523423166228974104.jpg' },
  { _id: 586df9485eeda7075c840ef9,
    title: '时装设计师与他们的“灵感缪斯”',
    author: '',
    type: 3,
    content: '设计师与模特的关系，像极了导演与演员的关系，这种共生的关系可以让他们都成就非凡。然而，你却很难说清楚到底是谁成就了谁。',
    img: '/upload/1483602245912BA0E79QV5D9M0095.jpg' },
  { _id: 586df85b25ae2a2a545382fa,
    title: '奥运圣火点燃之地奥林匹亚-希腊游记',
    author: '爱旅行',
    type: 3,
    content: '在世界上每四年举办一届的奥运会，是全世界瞩目的盛会。每次盛会开始前举行圣火点燃仪式的地方，都会吸引世界的目光，那就是奥林匹亚。奥林匹亚遗址在伯罗奔尼撒半岛西部的山谷里，阿尔菲奥斯河北岸（距河口16公里），伊利亚洲境内。那里距离首都雅典约370公里，坐落在克洛诺斯树木繁茂、绿草如茵的山麓，是古希腊的圣地。自从史前时代以来就有人居住。在公元前10世纪，这里是奥林匹亚古代厄利斯用以祭拜宙斯的一个宗教中心。在这里有古代世界最重要的建筑杰作。除了庙宇以外，还保留着专供奥运会使用的各种体育设施。开始于公元前776年的奥运会每四年在奥林匹亚举行一次。这就是点燃圣火的地方，赫拉神庙',
    img: '/upload/14836020095936631873707723035542.jpg' },
  { _id: 586df910f28a8b29b8629cc4,
    title: '25岁瑜伽女孩用镜头记录美好身体',
    author: '瑜伽',
    type: 3,
    content: '25 岁女孩，Nude Yoga Girl，匿名在社交网站上裸体呈现各式瑜伽动作，以黑白影像的方式表现身体的美感，短短几个月就已经得到了近 8 万个粉丝，各式高难度的瑜伽动作看了实在让人瞬间有好多感受，先是为人体动作的可能性感到不可思议，再来又为她身体的优美线条大大赞赏，最后又想，这些照片是谁拍的？',
    img: '/upload/1483602190011900x600_BAVIOMN35D9M0095.jpg' },
  { _id: 586df9d3c8869d2bf81b361e,
    title: '美人鱼：周星驰还是不懂爱情',
    author: '周星星',
    type: 3,
    content: '去影院前就想着，周星驰的片子看完可以写点什么。回来后，反而好长时间不知从哪写起，就像约会前兜里就藏着避孕套，有种掩饰不住的图谋不轨，结果把约会的氛围都败坏了。\n\n所以，还是不说电影了，说说周星驰电影里的美女和爱情。\n\n《美人鱼》里两位美女。一个有钱有貌，身材好到上下都是宝。不用多说，她是蛇蝎心肠的反派。一个相貌平平，胸部都被碾压过似的。不用多说，她必然内心善良，百万支票可以瞬间弹指燃灰。\n\n如果不是加上人鱼的新鲜元素。电影里这俩女性角色的对比和配置，实在是传统到土掉渣。可这，就是很多混出成就的穷小子对于女性，或者对于爱情的全部感知吧。\n\n爱情，对于要挣扎出底层的穷小子来说，从来是奢侈品。因为时间有限，他们来不及、也不愿去细细体味女孩的内心（除非是要走伟大先驱嫪毐那一路的）。他们对女性的感悟停留表面，对爱情的理解粗糙。\n\n因为上帝是公平的，一个底层奋斗挣扎出的人，还要风流倜傥知冷知热，怎么可能？生活又不是网络YY小说。\n\n周星驰就是奋斗出来的穷小子。他接受采访时，谈到曾经的那“一段真挚的感情”，他说自己“运气不好”，那段时间最忙；如果可以重来的话，就不要那么忙了。\n\n可是如果真的重来，我想他还是会那么忙，还是会错过。因为他是周星驰。有些人的命运是注定的，人性也是注定的；周星驰电影里的爱情套路，因而也是注定的。\n\n他电影里的爱情，不是点缀，就是悲催。  \n\n点缀是因为周星驰电影里的主角，就像年少的他一样，小人物有大理想大志向，很忙为了摆脱很穷。他需要美女，却没有时间善待，所以爱情只能成为副线，当男主角功成名就之后，顺其自然抱得美人归。\n\n很多电影里都这样把女性当作人生“奖品”，周星驰的不同在于，他更理解生活的现实，更擅长用荒诞手法表现出来。他知道，无论怎样奋斗成人生赢家，也不可能得到一个内外兼修的美人，有魔鬼身材，又有天使的心。',
    img: '/upload/14836023847336631912190629661375.jpg' } ]
[0mGET / [36m304 [0m128.574 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m4.748 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.663 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.774 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.596 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.185 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m94.380 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.941 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m2.221 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m3.185 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m3.985 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m2.295 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m2.579 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.454 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.498 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m0.601 ms - -[0m
[0mGET /upload/1483602245912BA0E79QV5D9M0095.jpg [36m304 [0m0.703 ms - -[0m
[0mGET /upload/14836020095936631873707723035542.jpg [36m304 [0m0.430 ms - -[0m
[0mGET /upload/1483602190011900x600_BAVIOMN35D9M0095.jpg [36m304 [0m0.439 ms - -[0m
[0mGET /upload/14836023847336631912190629661375.jpg [36m304 [0m0.455 ms - -[0m
[0mGET /article/update?id=586df7fa5f40b5275ccba37b [36m304 [0m182.908 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.905 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m2.034 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m2.945 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m4.745 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.453 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m0.443 ms - -[0m
[0mGET /member/index [36m304 [0m25.295 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m4.874 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m4.396 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m3.854 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.104 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.407 ms - -[0m
[0mGET /article/index [36m304 [0m64.670 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.753 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m3.208 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.760 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.134 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.300 ms - -[0m
----- [ { _id: 586dedbd5505a828f02af177,
    title: '长城的美永远会超出你的想象',
    author: '大狗',
    type: 3,
    content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
    img: '/upload/14835992900846632113401257877779.jpg' },
  { _id: 586dea879363c323605fb8ec,
    title: '让姚明当篮协主席最大的阻力在哪？',
    author: '风清扬',
    type: 3,
    content: '新年伊始，《篮球先锋报》便曝出了一则令篮球迷们欢欣鼓舞的好消息——体育总局建议让姚明担任篮协主席并兼任男篮国家队主教练。而对于各大媒体的求证和追问，相关人士虽未证实，却也给出了“一切皆有可能”的答案。就此新华社撰文称，光有热情、知名度和管理经验，姚明入主篮协仍有障碍：资历和经验尚浅，“毕竟篮协从没有这么年轻的主席”。\n\n \n\n姚明的确有不适合当篮协主席的理由，比如首先由于姚明本人就是上海东方大鲨鱼俱乐部的老板，他可以兼任公司的董事长，却不太合适担任需要保持中立性的篮协主席。当然，在过渡阶段，加上姚明本人具有极高威望和地位，以他的人格魅力未必不能一试。至于男篮主教练，这是一个技术活，姚明退役后并没有从事教练职业。另外，出任篮协主席又会不会影响他作为上海俱乐部投资人的位置？\n\n \n\n但“太年轻资历浅”，这是一个不应该成为理由的理由。姚明今年37岁，也是快四十岁的人了，很多官场中人在这个年龄混得好的，也到正厅副部了。而这个年龄正是干事业的年龄，难道一定要一个懂做官但从未打过蓝球，甚至没有搞过体育的人才算是有“资历”。如果真是这样，就算是上面点头了，姚明本人也未必愿意，因为他会去体会和理解郎平当年回国接管女排时有多难。\n\n \n\n按照惯例，篮协主席以前一般由体育总局的官员担任，因此经常出现“外行管内行”的情况。现在国家提出“管办分离”，中国足协已经走在前面，篮球协会也要紧紧跟上。如果姚明当篮协主席，至少不会有“外行领导内行”的弊端；姚明当男篮主教练，再大牌的所谓“球星”也得服服帖帖，因为中国篮球没人能比姚明更大牌。可以说，姚明出山可最大限度避免中国篮球界的“内耗”，有利于整合各方力量迅速提高男篮的实力和战绩。\n\n \n\n另外，作为中国最成功的篮球运动员，姚明具备的影响力和号召力是不言而喻的，而在退役之后，姚明成为了上海男篮的老板，在NBA效力的经历使他视野开阔，他也一直试图推动CBA联赛的职业化改革。国家体育总局建议请姚明担任中国篮球协会主席，这不是“干涉内政”，而是着眼全局的建议——姚明有丰富的篮球经历，曾在美国打球有更开阔的视野，对篮球改革也有自己独到的见解。在目前的篮协主席候选人中，姚明无疑是最佳人选。',
    img: '/upload/14836013900236631886901862555933.jpg' },
  { _id: 586de9c89363c323605fb8eb,
    title: '野生鸳鸯更漂亮',
    author: '卡卡',
    type: 3,
    content: '鸳鸯，雌雄异色。雄鸟嘴红色，脚橙黄色，羽色鲜艳而华丽，非常奇特和醒目，野外极易辨认。雌鸟嘴黑色，脚橙黄色，头和整个上体灰褐色，亦极为醒目和独特。主要栖息于山地森林河流、湖泊、水塘、芦苇沼泽和稻田地中。杂食性。鸳鸯为中国著名的观赏鸟类，被看成爱情的象征。2016年12月31日在陕西洋县境内拍摄。',
    img: '/upload/14836015203016632036435443952981.jpg' },
  { _id: 586df7fa5f40b5275ccba37b,
    title: '精美的玻璃艺术',
    author: '午美',
    type: 3,
    content: '来自美国的玻璃艺术家戴尔.切胡里(Dale Chihuly)，1941年生于华盛顿的塔科马，由于一次意外，让他的左眼戴上了标志性的黑眼罩，充满激情的切胡里与他的工作团队做出来的令人震撼的前所未有的惊艳作品，用透明的，色彩鲜艳的玻璃作为媒介创作出来的艺术品造型奔放、大胆。\n\n  切胡里的早期作品蕴涵着丰富的自然元素。切胡里所有的作品都带有强烈、鲜明的色彩及细微的线条装饰。他的作品中的海洋系列、花车系列及吊灯系列的灵感全都来自于童年在华盛顿海边生活的回忆，中国玻璃协会网站上展示的下面这几个系列已经成为了他的标志性的作品。',
    img: '/upload/14836019112762523423166228974104.jpg' },
  { _id: 586df9485eeda7075c840ef9,
    title: '时装设计师与他们的“灵感缪斯”',
    author: '',
    type: 3,
    content: '设计师与模特的关系，像极了导演与演员的关系，这种共生的关系可以让他们都成就非凡。然而，你却很难说清楚到底是谁成就了谁。',
    img: '/upload/1483602245912BA0E79QV5D9M0095.jpg' },
  { _id: 586df85b25ae2a2a545382fa,
    title: '奥运圣火点燃之地奥林匹亚-希腊游记',
    author: '爱旅行',
    type: 3,
    content: '在世界上每四年举办一届的奥运会，是全世界瞩目的盛会。每次盛会开始前举行圣火点燃仪式的地方，都会吸引世界的目光，那就是奥林匹亚。奥林匹亚遗址在伯罗奔尼撒半岛西部的山谷里，阿尔菲奥斯河北岸（距河口16公里），伊利亚洲境内。那里距离首都雅典约370公里，坐落在克洛诺斯树木繁茂、绿草如茵的山麓，是古希腊的圣地。自从史前时代以来就有人居住。在公元前10世纪，这里是奥林匹亚古代厄利斯用以祭拜宙斯的一个宗教中心。在这里有古代世界最重要的建筑杰作。除了庙宇以外，还保留着专供奥运会使用的各种体育设施。开始于公元前776年的奥运会每四年在奥林匹亚举行一次。这就是点燃圣火的地方，赫拉神庙',
    img: '/upload/14836020095936631873707723035542.jpg' },
  { _id: 586df910f28a8b29b8629cc4,
    title: '25岁瑜伽女孩用镜头记录美好身体',
    author: '瑜伽',
    type: 3,
    content: '25 岁女孩，Nude Yoga Girl，匿名在社交网站上裸体呈现各式瑜伽动作，以黑白影像的方式表现身体的美感，短短几个月就已经得到了近 8 万个粉丝，各式高难度的瑜伽动作看了实在让人瞬间有好多感受，先是为人体动作的可能性感到不可思议，再来又为她身体的优美线条大大赞赏，最后又想，这些照片是谁拍的？',
    img: '/upload/1483602190011900x600_BAVIOMN35D9M0095.jpg' },
  { _id: 586df9d3c8869d2bf81b361e,
    title: '美人鱼：周星驰还是不懂爱情',
    author: '周星星',
    type: 3,
    content: '去影院前就想着，周星驰的片子看完可以写点什么。回来后，反而好长时间不知从哪写起，就像约会前兜里就藏着避孕套，有种掩饰不住的图谋不轨，结果把约会的氛围都败坏了。\n\n所以，还是不说电影了，说说周星驰电影里的美女和爱情。\n\n《美人鱼》里两位美女。一个有钱有貌，身材好到上下都是宝。不用多说，她是蛇蝎心肠的反派。一个相貌平平，胸部都被碾压过似的。不用多说，她必然内心善良，百万支票可以瞬间弹指燃灰。\n\n如果不是加上人鱼的新鲜元素。电影里这俩女性角色的对比和配置，实在是传统到土掉渣。可这，就是很多混出成就的穷小子对于女性，或者对于爱情的全部感知吧。\n\n爱情，对于要挣扎出底层的穷小子来说，从来是奢侈品。因为时间有限，他们来不及、也不愿去细细体味女孩的内心（除非是要走伟大先驱嫪毐那一路的）。他们对女性的感悟停留表面，对爱情的理解粗糙。\n\n因为上帝是公平的，一个底层奋斗挣扎出的人，还要风流倜傥知冷知热，怎么可能？生活又不是网络YY小说。\n\n周星驰就是奋斗出来的穷小子。他接受采访时，谈到曾经的那“一段真挚的感情”，他说自己“运气不好”，那段时间最忙；如果可以重来的话，就不要那么忙了。\n\n可是如果真的重来，我想他还是会那么忙，还是会错过。因为他是周星驰。有些人的命运是注定的，人性也是注定的；周星驰电影里的爱情套路，因而也是注定的。\n\n他电影里的爱情，不是点缀，就是悲催。  \n\n点缀是因为周星驰电影里的主角，就像年少的他一样，小人物有大理想大志向，很忙为了摆脱很穷。他需要美女，却没有时间善待，所以爱情只能成为副线，当男主角功成名就之后，顺其自然抱得美人归。\n\n很多电影里都这样把女性当作人生“奖品”，周星驰的不同在于，他更理解生活的现实，更擅长用荒诞手法表现出来。他知道，无论怎样奋斗成人生赢家，也不可能得到一个内外兼修的美人，有魔鬼身材，又有天使的心。',
    img: '/upload/14836023847336631912190629661375.jpg' } ]
[0mGET / [36m304 [0m22.778 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.541 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m2.876 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m6.730 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.556 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m3.589 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m51.606 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.941 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.721 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.389 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.185 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m4.444 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m4.262 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m1.689 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m2.137 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m0.691 ms - -[0m
[0mGET /upload/1483602245912BA0E79QV5D9M0095.jpg [36m304 [0m1.418 ms - -[0m
[0mGET /upload/14836020095936631873707723035542.jpg [36m304 [0m0.415 ms - -[0m
[0mGET /upload/1483602190011900x600_BAVIOMN35D9M0095.jpg [36m304 [0m0.829 ms - -[0m
[0mGET /upload/14836023847336631912190629661375.jpg [36m304 [0m0.376 ms - -[0m
[0mGET /article/update?id=586df9485eeda7075c840ef9 [32m200 [0m54.959 ms - 3379[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m2.077 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m2.139 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.433 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.574 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m2.467 ms - -[0m
[0mGET /upload/1483602245912BA0E79QV5D9M0095.jpg [36m304 [0m0.462 ms - -[0m
----- [ { _id: 586dedbd5505a828f02af177,
    title: '长城的美永远会超出你的想象',
    author: '大狗',
    type: 3,
    content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
    img: '/upload/14835992900846632113401257877779.jpg' },
  { _id: 586dea879363c323605fb8ec,
    title: '让姚明当篮协主席最大的阻力在哪？',
    author: '风清扬',
    type: 3,
    content: '新年伊始，《篮球先锋报》便曝出了一则令篮球迷们欢欣鼓舞的好消息——体育总局建议让姚明担任篮协主席并兼任男篮国家队主教练。而对于各大媒体的求证和追问，相关人士虽未证实，却也给出了“一切皆有可能”的答案。就此新华社撰文称，光有热情、知名度和管理经验，姚明入主篮协仍有障碍：资历和经验尚浅，“毕竟篮协从没有这么年轻的主席”。\n\n \n\n姚明的确有不适合当篮协主席的理由，比如首先由于姚明本人就是上海东方大鲨鱼俱乐部的老板，他可以兼任公司的董事长，却不太合适担任需要保持中立性的篮协主席。当然，在过渡阶段，加上姚明本人具有极高威望和地位，以他的人格魅力未必不能一试。至于男篮主教练，这是一个技术活，姚明退役后并没有从事教练职业。另外，出任篮协主席又会不会影响他作为上海俱乐部投资人的位置？\n\n \n\n但“太年轻资历浅”，这是一个不应该成为理由的理由。姚明今年37岁，也是快四十岁的人了，很多官场中人在这个年龄混得好的，也到正厅副部了。而这个年龄正是干事业的年龄，难道一定要一个懂做官但从未打过蓝球，甚至没有搞过体育的人才算是有“资历”。如果真是这样，就算是上面点头了，姚明本人也未必愿意，因为他会去体会和理解郎平当年回国接管女排时有多难。\n\n \n\n按照惯例，篮协主席以前一般由体育总局的官员担任，因此经常出现“外行管内行”的情况。现在国家提出“管办分离”，中国足协已经走在前面，篮球协会也要紧紧跟上。如果姚明当篮协主席，至少不会有“外行领导内行”的弊端；姚明当男篮主教练，再大牌的所谓“球星”也得服服帖帖，因为中国篮球没人能比姚明更大牌。可以说，姚明出山可最大限度避免中国篮球界的“内耗”，有利于整合各方力量迅速提高男篮的实力和战绩。\n\n \n\n另外，作为中国最成功的篮球运动员，姚明具备的影响力和号召力是不言而喻的，而在退役之后，姚明成为了上海男篮的老板，在NBA效力的经历使他视野开阔，他也一直试图推动CBA联赛的职业化改革。国家体育总局建议请姚明担任中国篮球协会主席，这不是“干涉内政”，而是着眼全局的建议——姚明有丰富的篮球经历，曾在美国打球有更开阔的视野，对篮球改革也有自己独到的见解。在目前的篮协主席候选人中，姚明无疑是最佳人选。',
    img: '/upload/14836013900236631886901862555933.jpg' },
  { _id: 586de9c89363c323605fb8eb,
    title: '野生鸳鸯更漂亮',
    author: '卡卡',
    type: 3,
    content: '鸳鸯，雌雄异色。雄鸟嘴红色，脚橙黄色，羽色鲜艳而华丽，非常奇特和醒目，野外极易辨认。雌鸟嘴黑色，脚橙黄色，头和整个上体灰褐色，亦极为醒目和独特。主要栖息于山地森林河流、湖泊、水塘、芦苇沼泽和稻田地中。杂食性。鸳鸯为中国著名的观赏鸟类，被看成爱情的象征。2016年12月31日在陕西洋县境内拍摄。',
    img: '/upload/14836015203016632036435443952981.jpg' },
  { _id: 586df7fa5f40b5275ccba37b,
    title: '精美的玻璃艺术',
    author: '午美',
    type: 3,
    content: '来自美国的玻璃艺术家戴尔.切胡里(Dale Chihuly)，1941年生于华盛顿的塔科马，由于一次意外，让他的左眼戴上了标志性的黑眼罩，充满激情的切胡里与他的工作团队做出来的令人震撼的前所未有的惊艳作品，用透明的，色彩鲜艳的玻璃作为媒介创作出来的艺术品造型奔放、大胆。\n\n  切胡里的早期作品蕴涵着丰富的自然元素。切胡里所有的作品都带有强烈、鲜明的色彩及细微的线条装饰。他的作品中的海洋系列、花车系列及吊灯系列的灵感全都来自于童年在华盛顿海边生活的回忆，中国玻璃协会网站上展示的下面这几个系列已经成为了他的标志性的作品。',
    img: '/upload/14836019112762523423166228974104.jpg' },
  { _id: 586df9485eeda7075c840ef9,
    title: '时装设计师与他们的“灵感缪斯”',
    author: '',
    type: 3,
    content: '设计师与模特的关系，像极了导演与演员的关系，这种共生的关系可以让他们都成就非凡。然而，你却很难说清楚到底是谁成就了谁。',
    img: '/upload/1483602245912BA0E79QV5D9M0095.jpg' },
  { _id: 586df85b25ae2a2a545382fa,
    title: '奥运圣火点燃之地奥林匹亚-希腊游记',
    author: '爱旅行',
    type: 3,
    content: '在世界上每四年举办一届的奥运会，是全世界瞩目的盛会。每次盛会开始前举行圣火点燃仪式的地方，都会吸引世界的目光，那就是奥林匹亚。奥林匹亚遗址在伯罗奔尼撒半岛西部的山谷里，阿尔菲奥斯河北岸（距河口16公里），伊利亚洲境内。那里距离首都雅典约370公里，坐落在克洛诺斯树木繁茂、绿草如茵的山麓，是古希腊的圣地。自从史前时代以来就有人居住。在公元前10世纪，这里是奥林匹亚古代厄利斯用以祭拜宙斯的一个宗教中心。在这里有古代世界最重要的建筑杰作。除了庙宇以外，还保留着专供奥运会使用的各种体育设施。开始于公元前776年的奥运会每四年在奥林匹亚举行一次。这就是点燃圣火的地方，赫拉神庙',
    img: '/upload/14836020095936631873707723035542.jpg' },
  { _id: 586df910f28a8b29b8629cc4,
    title: '25岁瑜伽女孩用镜头记录美好身体',
    author: '瑜伽',
    type: 3,
    content: '25 岁女孩，Nude Yoga Girl，匿名在社交网站上裸体呈现各式瑜伽动作，以黑白影像的方式表现身体的美感，短短几个月就已经得到了近 8 万个粉丝，各式高难度的瑜伽动作看了实在让人瞬间有好多感受，先是为人体动作的可能性感到不可思议，再来又为她身体的优美线条大大赞赏，最后又想，这些照片是谁拍的？',
    img: '/upload/1483602190011900x600_BAVIOMN35D9M0095.jpg' },
  { _id: 586df9d3c8869d2bf81b361e,
    title: '美人鱼：周星驰还是不懂爱情',
    author: '周星星',
    type: 3,
    content: '去影院前就想着，周星驰的片子看完可以写点什么。回来后，反而好长时间不知从哪写起，就像约会前兜里就藏着避孕套，有种掩饰不住的图谋不轨，结果把约会的氛围都败坏了。\n\n所以，还是不说电影了，说说周星驰电影里的美女和爱情。\n\n《美人鱼》里两位美女。一个有钱有貌，身材好到上下都是宝。不用多说，她是蛇蝎心肠的反派。一个相貌平平，胸部都被碾压过似的。不用多说，她必然内心善良，百万支票可以瞬间弹指燃灰。\n\n如果不是加上人鱼的新鲜元素。电影里这俩女性角色的对比和配置，实在是传统到土掉渣。可这，就是很多混出成就的穷小子对于女性，或者对于爱情的全部感知吧。\n\n爱情，对于要挣扎出底层的穷小子来说，从来是奢侈品。因为时间有限，他们来不及、也不愿去细细体味女孩的内心（除非是要走伟大先驱嫪毐那一路的）。他们对女性的感悟停留表面，对爱情的理解粗糙。\n\n因为上帝是公平的，一个底层奋斗挣扎出的人，还要风流倜傥知冷知热，怎么可能？生活又不是网络YY小说。\n\n周星驰就是奋斗出来的穷小子。他接受采访时，谈到曾经的那“一段真挚的感情”，他说自己“运气不好”，那段时间最忙；如果可以重来的话，就不要那么忙了。\n\n可是如果真的重来，我想他还是会那么忙，还是会错过。因为他是周星驰。有些人的命运是注定的，人性也是注定的；周星驰电影里的爱情套路，因而也是注定的。\n\n他电影里的爱情，不是点缀，就是悲催。  \n\n点缀是因为周星驰电影里的主角，就像年少的他一样，小人物有大理想大志向，很忙为了摆脱很穷。他需要美女，却没有时间善待，所以爱情只能成为副线，当男主角功成名就之后，顺其自然抱得美人归。\n\n很多电影里都这样把女性当作人生“奖品”，周星驰的不同在于，他更理解生活的现实，更擅长用荒诞手法表现出来。他知道，无论怎样奋斗成人生赢家，也不可能得到一个内外兼修的美人，有魔鬼身材，又有天使的心。',
    img: '/upload/14836023847336631912190629661375.jpg' } ]
[0mGET / [36m304 [0m22.474 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.410 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.503 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.546 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.727 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.540 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m47.101 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.023 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.265 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.887 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.260 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.430 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.460 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.610 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m1.037 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m0.447 ms - -[0m
[0mGET /upload/1483602245912BA0E79QV5D9M0095.jpg [36m304 [0m0.580 ms - -[0m
[0mGET /upload/14836020095936631873707723035542.jpg [36m304 [0m0.666 ms - -[0m
[0mGET /upload/1483602190011900x600_BAVIOMN35D9M0095.jpg [36m304 [0m0.379 ms - -[0m
[0mGET /upload/14836023847336631912190629661375.jpg [36m304 [0m0.582 ms - -[0m
++++++++++++++ { id: '586df9d3c8869d2bf81b361e' }
----- 详情 { _id: 586df9d3c8869d2bf81b361e,
  title: '美人鱼：周星驰还是不懂爱情',
  author: '周星星',
  type: 3,
  content: '去影院前就想着，周星驰的片子看完可以写点什么。回来后，反而好长时间不知从哪写起，就像约会前兜里就藏着避孕套，有种掩饰不住的图谋不轨，结果把约会的氛围都败坏了。\n\n所以，还是不说电影了，说说周星驰电影里的美女和爱情。\n\n《美人鱼》里两位美女。一个有钱有貌，身材好到上下都是宝。不用多说，她是蛇蝎心肠的反派。一个相貌平平，胸部都被碾压过似的。不用多说，她必然内心善良，百万支票可以瞬间弹指燃灰。\n\n如果不是加上人鱼的新鲜元素。电影里这俩女性角色的对比和配置，实在是传统到土掉渣。可这，就是很多混出成就的穷小子对于女性，或者对于爱情的全部感知吧。\n\n爱情，对于要挣扎出底层的穷小子来说，从来是奢侈品。因为时间有限，他们来不及、也不愿去细细体味女孩的内心（除非是要走伟大先驱嫪毐那一路的）。他们对女性的感悟停留表面，对爱情的理解粗糙。\n\n因为上帝是公平的，一个底层奋斗挣扎出的人，还要风流倜傥知冷知热，怎么可能？生活又不是网络YY小说。\n\n周星驰就是奋斗出来的穷小子。他接受采访时，谈到曾经的那“一段真挚的感情”，他说自己“运气不好”，那段时间最忙；如果可以重来的话，就不要那么忙了。\n\n可是如果真的重来，我想他还是会那么忙，还是会错过。因为他是周星驰。有些人的命运是注定的，人性也是注定的；周星驰电影里的爱情套路，因而也是注定的。\n\n他电影里的爱情，不是点缀，就是悲催。  \n\n点缀是因为周星驰电影里的主角，就像年少的他一样，小人物有大理想大志向，很忙为了摆脱很穷。他需要美女，却没有时间善待，所以爱情只能成为副线，当男主角功成名就之后，顺其自然抱得美人归。\n\n很多电影里都这样把女性当作人生“奖品”，周星驰的不同在于，他更理解生活的现实，更擅长用荒诞手法表现出来。他知道，无论怎样奋斗成人生赢家，也不可能得到一个内外兼修的美人，有魔鬼身材，又有天使的心。',
  img: '/upload/14836023847336631912190629661375.jpg' }
评论列表 []
[0mGET /article/detail?id=586df9d3c8869d2bf81b361e [32m200 [0m198.638 ms - 4487[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.366 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.927 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.452 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.498 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.582 ms - -[0m
[0mGET /upload/14836023847336631912190629661375.jpg [36m304 [0m1.456 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m178.377 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.902 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m0.647 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m4.495 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.033 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.029 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.471 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.432 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.481 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m0.840 ms - -[0m
[0mGET /upload/1483602245912BA0E79QV5D9M0095.jpg [36m304 [0m0.345 ms - -[0m
[0mGET /upload/14836020095936631873707723035542.jpg [36m304 [0m0.350 ms - -[0m
[0mGET /upload/1483602190011900x600_BAVIOMN35D9M0095.jpg [36m304 [0m0.369 ms - -[0m
[0mGET /upload/14836023847336631912190629661375.jpg [36m304 [0m1.410 ms - -[0m
[0mGET /article/update?id=586df85b25ae2a2a545382fa [32m200 [0m97.984 ms - 4056[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m3.260 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.269 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m2.411 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.411 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.769 ms - -[0m
[0mGET /upload/14836020095936631873707723035542.jpg [36m304 [0m0.837 ms - -[0m
[0mGET /member/index [36m304 [0m26.757 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.663 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.572 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.882 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.183 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.573 ms - -[0m
[0mGET /comment/index [36m304 [0m21.136 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m2.217 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m4.185 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.781 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.484 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.736 ms - -[0m
[0mGET /article/index [36m304 [0m53.628 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.975 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m6.633 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m6.358 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m2.800 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.323 ms - -[0m
----- [ { _id: 586dedbd5505a828f02af177,
    title: '长城的美永远会超出你的想象',
    author: '大狗',
    type: 3,
    content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
    img: '/upload/14835992900846632113401257877779.jpg' },
  { _id: 586dea879363c323605fb8ec,
    title: '让姚明当篮协主席最大的阻力在哪？',
    author: '风清扬',
    type: 3,
    content: '新年伊始，《篮球先锋报》便曝出了一则令篮球迷们欢欣鼓舞的好消息——体育总局建议让姚明担任篮协主席并兼任男篮国家队主教练。而对于各大媒体的求证和追问，相关人士虽未证实，却也给出了“一切皆有可能”的答案。就此新华社撰文称，光有热情、知名度和管理经验，姚明入主篮协仍有障碍：资历和经验尚浅，“毕竟篮协从没有这么年轻的主席”。\n\n \n\n姚明的确有不适合当篮协主席的理由，比如首先由于姚明本人就是上海东方大鲨鱼俱乐部的老板，他可以兼任公司的董事长，却不太合适担任需要保持中立性的篮协主席。当然，在过渡阶段，加上姚明本人具有极高威望和地位，以他的人格魅力未必不能一试。至于男篮主教练，这是一个技术活，姚明退役后并没有从事教练职业。另外，出任篮协主席又会不会影响他作为上海俱乐部投资人的位置？\n\n \n\n但“太年轻资历浅”，这是一个不应该成为理由的理由。姚明今年37岁，也是快四十岁的人了，很多官场中人在这个年龄混得好的，也到正厅副部了。而这个年龄正是干事业的年龄，难道一定要一个懂做官但从未打过蓝球，甚至没有搞过体育的人才算是有“资历”。如果真是这样，就算是上面点头了，姚明本人也未必愿意，因为他会去体会和理解郎平当年回国接管女排时有多难。\n\n \n\n按照惯例，篮协主席以前一般由体育总局的官员担任，因此经常出现“外行管内行”的情况。现在国家提出“管办分离”，中国足协已经走在前面，篮球协会也要紧紧跟上。如果姚明当篮协主席，至少不会有“外行领导内行”的弊端；姚明当男篮主教练，再大牌的所谓“球星”也得服服帖帖，因为中国篮球没人能比姚明更大牌。可以说，姚明出山可最大限度避免中国篮球界的“内耗”，有利于整合各方力量迅速提高男篮的实力和战绩。\n\n \n\n另外，作为中国最成功的篮球运动员，姚明具备的影响力和号召力是不言而喻的，而在退役之后，姚明成为了上海男篮的老板，在NBA效力的经历使他视野开阔，他也一直试图推动CBA联赛的职业化改革。国家体育总局建议请姚明担任中国篮球协会主席，这不是“干涉内政”，而是着眼全局的建议——姚明有丰富的篮球经历，曾在美国打球有更开阔的视野，对篮球改革也有自己独到的见解。在目前的篮协主席候选人中，姚明无疑是最佳人选。',
    img: '/upload/14836013900236631886901862555933.jpg' },
  { _id: 586de9c89363c323605fb8eb,
    title: '野生鸳鸯更漂亮',
    author: '卡卡',
    type: 3,
    content: '鸳鸯，雌雄异色。雄鸟嘴红色，脚橙黄色，羽色鲜艳而华丽，非常奇特和醒目，野外极易辨认。雌鸟嘴黑色，脚橙黄色，头和整个上体灰褐色，亦极为醒目和独特。主要栖息于山地森林河流、湖泊、水塘、芦苇沼泽和稻田地中。杂食性。鸳鸯为中国著名的观赏鸟类，被看成爱情的象征。2016年12月31日在陕西洋县境内拍摄。',
    img: '/upload/14836015203016632036435443952981.jpg' },
  { _id: 586df7fa5f40b5275ccba37b,
    title: '精美的玻璃艺术',
    author: '午美',
    type: 3,
    content: '来自美国的玻璃艺术家戴尔.切胡里(Dale Chihuly)，1941年生于华盛顿的塔科马，由于一次意外，让他的左眼戴上了标志性的黑眼罩，充满激情的切胡里与他的工作团队做出来的令人震撼的前所未有的惊艳作品，用透明的，色彩鲜艳的玻璃作为媒介创作出来的艺术品造型奔放、大胆。\n\n  切胡里的早期作品蕴涵着丰富的自然元素。切胡里所有的作品都带有强烈、鲜明的色彩及细微的线条装饰。他的作品中的海洋系列、花车系列及吊灯系列的灵感全都来自于童年在华盛顿海边生活的回忆，中国玻璃协会网站上展示的下面这几个系列已经成为了他的标志性的作品。',
    img: '/upload/14836019112762523423166228974104.jpg' },
  { _id: 586df9485eeda7075c840ef9,
    title: '时装设计师与他们的“灵感缪斯”',
    author: '',
    type: 3,
    content: '设计师与模特的关系，像极了导演与演员的关系，这种共生的关系可以让他们都成就非凡。然而，你却很难说清楚到底是谁成就了谁。',
    img: '/upload/1483602245912BA0E79QV5D9M0095.jpg' },
  { _id: 586df85b25ae2a2a545382fa,
    title: '奥运圣火点燃之地奥林匹亚-希腊游记',
    author: '爱旅行',
    type: 3,
    content: '在世界上每四年举办一届的奥运会，是全世界瞩目的盛会。每次盛会开始前举行圣火点燃仪式的地方，都会吸引世界的目光，那就是奥林匹亚。奥林匹亚遗址在伯罗奔尼撒半岛西部的山谷里，阿尔菲奥斯河北岸（距河口16公里），伊利亚洲境内。那里距离首都雅典约370公里，坐落在克洛诺斯树木繁茂、绿草如茵的山麓，是古希腊的圣地。自从史前时代以来就有人居住。在公元前10世纪，这里是奥林匹亚古代厄利斯用以祭拜宙斯的一个宗教中心。在这里有古代世界最重要的建筑杰作。除了庙宇以外，还保留着专供奥运会使用的各种体育设施。开始于公元前776年的奥运会每四年在奥林匹亚举行一次。这就是点燃圣火的地方，赫拉神庙',
    img: '/upload/14836020095936631873707723035542.jpg' },
  { _id: 586df910f28a8b29b8629cc4,
    title: '25岁瑜伽女孩用镜头记录美好身体',
    author: '瑜伽',
    type: 3,
    content: '25 岁女孩，Nude Yoga Girl，匿名在社交网站上裸体呈现各式瑜伽动作，以黑白影像的方式表现身体的美感，短短几个月就已经得到了近 8 万个粉丝，各式高难度的瑜伽动作看了实在让人瞬间有好多感受，先是为人体动作的可能性感到不可思议，再来又为她身体的优美线条大大赞赏，最后又想，这些照片是谁拍的？',
    img: '/upload/1483602190011900x600_BAVIOMN35D9M0095.jpg' },
  { _id: 586df9d3c8869d2bf81b361e,
    title: '美人鱼：周星驰还是不懂爱情',
    author: '周星星',
    type: 3,
    content: '去影院前就想着，周星驰的片子看完可以写点什么。回来后，反而好长时间不知从哪写起，就像约会前兜里就藏着避孕套，有种掩饰不住的图谋不轨，结果把约会的氛围都败坏了。\n\n所以，还是不说电影了，说说周星驰电影里的美女和爱情。\n\n《美人鱼》里两位美女。一个有钱有貌，身材好到上下都是宝。不用多说，她是蛇蝎心肠的反派。一个相貌平平，胸部都被碾压过似的。不用多说，她必然内心善良，百万支票可以瞬间弹指燃灰。\n\n如果不是加上人鱼的新鲜元素。电影里这俩女性角色的对比和配置，实在是传统到土掉渣。可这，就是很多混出成就的穷小子对于女性，或者对于爱情的全部感知吧。\n\n爱情，对于要挣扎出底层的穷小子来说，从来是奢侈品。因为时间有限，他们来不及、也不愿去细细体味女孩的内心（除非是要走伟大先驱嫪毐那一路的）。他们对女性的感悟停留表面，对爱情的理解粗糙。\n\n因为上帝是公平的，一个底层奋斗挣扎出的人，还要风流倜傥知冷知热，怎么可能？生活又不是网络YY小说。\n\n周星驰就是奋斗出来的穷小子。他接受采访时，谈到曾经的那“一段真挚的感情”，他说自己“运气不好”，那段时间最忙；如果可以重来的话，就不要那么忙了。\n\n可是如果真的重来，我想他还是会那么忙，还是会错过。因为他是周星驰。有些人的命运是注定的，人性也是注定的；周星驰电影里的爱情套路，因而也是注定的。\n\n他电影里的爱情，不是点缀，就是悲催。  \n\n点缀是因为周星驰电影里的主角，就像年少的他一样，小人物有大理想大志向，很忙为了摆脱很穷。他需要美女，却没有时间善待，所以爱情只能成为副线，当男主角功成名就之后，顺其自然抱得美人归。\n\n很多电影里都这样把女性当作人生“奖品”，周星驰的不同在于，他更理解生活的现实，更擅长用荒诞手法表现出来。他知道，无论怎样奋斗成人生赢家，也不可能得到一个内外兼修的美人，有魔鬼身材，又有天使的心。',
    img: '/upload/14836023847336631912190629661375.jpg' } ]
[0mGET / [36m304 [0m31.184 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m4.271 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.393 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m0.983 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.776 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m0.766 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m61.531 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.487 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m2.345 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.031 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.707 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m4.382 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m2.506 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.478 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.382 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m0.428 ms - -[0m
[0mGET /upload/1483602245912BA0E79QV5D9M0095.jpg [36m304 [0m0.455 ms - -[0m
[0mGET /upload/14836020095936631873707723035542.jpg [36m304 [0m1.200 ms - -[0m
[0mGET /upload/1483602190011900x600_BAVIOMN35D9M0095.jpg [36m304 [0m0.404 ms - -[0m
[0mGET /upload/14836023847336631912190629661375.jpg [36m304 [0m0.519 ms - -[0m
[0mGET /article/update?id=586df7fa5f40b5275ccba37b [36m304 [0m53.511 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.507 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m3.278 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.014 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.393 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m2.385 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m0.442 ms - -[0m
----- [ { _id: 586dedbd5505a828f02af177,
    title: '长城的美永远会超出你的想象',
    author: '大狗',
    type: 3,
    content: '攀爬过慕田峪长城的人，都会把那美丽的图景深刻在头脑中。每一次的回想，长城的美都能再次的震撼你的心灵。\n      是的，慕田峪长城的美永远会超出你的想象。',
    img: '/upload/14835992900846632113401257877779.jpg' },
  { _id: 586dea879363c323605fb8ec,
    title: '让姚明当篮协主席最大的阻力在哪？',
    author: '风清扬',
    type: 3,
    content: '新年伊始，《篮球先锋报》便曝出了一则令篮球迷们欢欣鼓舞的好消息——体育总局建议让姚明担任篮协主席并兼任男篮国家队主教练。而对于各大媒体的求证和追问，相关人士虽未证实，却也给出了“一切皆有可能”的答案。就此新华社撰文称，光有热情、知名度和管理经验，姚明入主篮协仍有障碍：资历和经验尚浅，“毕竟篮协从没有这么年轻的主席”。\n\n \n\n姚明的确有不适合当篮协主席的理由，比如首先由于姚明本人就是上海东方大鲨鱼俱乐部的老板，他可以兼任公司的董事长，却不太合适担任需要保持中立性的篮协主席。当然，在过渡阶段，加上姚明本人具有极高威望和地位，以他的人格魅力未必不能一试。至于男篮主教练，这是一个技术活，姚明退役后并没有从事教练职业。另外，出任篮协主席又会不会影响他作为上海俱乐部投资人的位置？\n\n \n\n但“太年轻资历浅”，这是一个不应该成为理由的理由。姚明今年37岁，也是快四十岁的人了，很多官场中人在这个年龄混得好的，也到正厅副部了。而这个年龄正是干事业的年龄，难道一定要一个懂做官但从未打过蓝球，甚至没有搞过体育的人才算是有“资历”。如果真是这样，就算是上面点头了，姚明本人也未必愿意，因为他会去体会和理解郎平当年回国接管女排时有多难。\n\n \n\n按照惯例，篮协主席以前一般由体育总局的官员担任，因此经常出现“外行管内行”的情况。现在国家提出“管办分离”，中国足协已经走在前面，篮球协会也要紧紧跟上。如果姚明当篮协主席，至少不会有“外行领导内行”的弊端；姚明当男篮主教练，再大牌的所谓“球星”也得服服帖帖，因为中国篮球没人能比姚明更大牌。可以说，姚明出山可最大限度避免中国篮球界的“内耗”，有利于整合各方力量迅速提高男篮的实力和战绩。\n\n \n\n另外，作为中国最成功的篮球运动员，姚明具备的影响力和号召力是不言而喻的，而在退役之后，姚明成为了上海男篮的老板，在NBA效力的经历使他视野开阔，他也一直试图推动CBA联赛的职业化改革。国家体育总局建议请姚明担任中国篮球协会主席，这不是“干涉内政”，而是着眼全局的建议——姚明有丰富的篮球经历，曾在美国打球有更开阔的视野，对篮球改革也有自己独到的见解。在目前的篮协主席候选人中，姚明无疑是最佳人选。',
    img: '/upload/14836013900236631886901862555933.jpg' },
  { _id: 586de9c89363c323605fb8eb,
    title: '野生鸳鸯更漂亮',
    author: '卡卡',
    type: 3,
    content: '鸳鸯，雌雄异色。雄鸟嘴红色，脚橙黄色，羽色鲜艳而华丽，非常奇特和醒目，野外极易辨认。雌鸟嘴黑色，脚橙黄色，头和整个上体灰褐色，亦极为醒目和独特。主要栖息于山地森林河流、湖泊、水塘、芦苇沼泽和稻田地中。杂食性。鸳鸯为中国著名的观赏鸟类，被看成爱情的象征。2016年12月31日在陕西洋县境内拍摄。',
    img: '/upload/14836015203016632036435443952981.jpg' },
  { _id: 586df7fa5f40b5275ccba37b,
    title: '精美的玻璃艺术',
    author: '午美',
    type: 3,
    content: '来自美国的玻璃艺术家戴尔.切胡里(Dale Chihuly)，1941年生于华盛顿的塔科马，由于一次意外，让他的左眼戴上了标志性的黑眼罩，充满激情的切胡里与他的工作团队做出来的令人震撼的前所未有的惊艳作品，用透明的，色彩鲜艳的玻璃作为媒介创作出来的艺术品造型奔放、大胆。\n\n  切胡里的早期作品蕴涵着丰富的自然元素。切胡里所有的作品都带有强烈、鲜明的色彩及细微的线条装饰。他的作品中的海洋系列、花车系列及吊灯系列的灵感全都来自于童年在华盛顿海边生活的回忆，中国玻璃协会网站上展示的下面这几个系列已经成为了他的标志性的作品。',
    img: '/upload/14836019112762523423166228974104.jpg' },
  { _id: 586df9485eeda7075c840ef9,
    title: '时装设计师与他们的“灵感缪斯”',
    author: '',
    type: 3,
    content: '设计师与模特的关系，像极了导演与演员的关系，这种共生的关系可以让他们都成就非凡。然而，你却很难说清楚到底是谁成就了谁。',
    img: '/upload/1483602245912BA0E79QV5D9M0095.jpg' },
  { _id: 586df85b25ae2a2a545382fa,
    title: '奥运圣火点燃之地奥林匹亚-希腊游记',
    author: '爱旅行',
    type: 3,
    content: '在世界上每四年举办一届的奥运会，是全世界瞩目的盛会。每次盛会开始前举行圣火点燃仪式的地方，都会吸引世界的目光，那就是奥林匹亚。奥林匹亚遗址在伯罗奔尼撒半岛西部的山谷里，阿尔菲奥斯河北岸（距河口16公里），伊利亚洲境内。那里距离首都雅典约370公里，坐落在克洛诺斯树木繁茂、绿草如茵的山麓，是古希腊的圣地。自从史前时代以来就有人居住。在公元前10世纪，这里是奥林匹亚古代厄利斯用以祭拜宙斯的一个宗教中心。在这里有古代世界最重要的建筑杰作。除了庙宇以外，还保留着专供奥运会使用的各种体育设施。开始于公元前776年的奥运会每四年在奥林匹亚举行一次。这就是点燃圣火的地方，赫拉神庙',
    img: '/upload/14836020095936631873707723035542.jpg' },
  { _id: 586df910f28a8b29b8629cc4,
    title: '25岁瑜伽女孩用镜头记录美好身体',
    author: '瑜伽',
    type: 3,
    content: '25 岁女孩，Nude Yoga Girl，匿名在社交网站上裸体呈现各式瑜伽动作，以黑白影像的方式表现身体的美感，短短几个月就已经得到了近 8 万个粉丝，各式高难度的瑜伽动作看了实在让人瞬间有好多感受，先是为人体动作的可能性感到不可思议，再来又为她身体的优美线条大大赞赏，最后又想，这些照片是谁拍的？',
    img: '/upload/1483602190011900x600_BAVIOMN35D9M0095.jpg' },
  { _id: 586df9d3c8869d2bf81b361e,
    title: '美人鱼：周星驰还是不懂爱情',
    author: '周星星',
    type: 3,
    content: '去影院前就想着，周星驰的片子看完可以写点什么。回来后，反而好长时间不知从哪写起，就像约会前兜里就藏着避孕套，有种掩饰不住的图谋不轨，结果把约会的氛围都败坏了。\n\n所以，还是不说电影了，说说周星驰电影里的美女和爱情。\n\n《美人鱼》里两位美女。一个有钱有貌，身材好到上下都是宝。不用多说，她是蛇蝎心肠的反派。一个相貌平平，胸部都被碾压过似的。不用多说，她必然内心善良，百万支票可以瞬间弹指燃灰。\n\n如果不是加上人鱼的新鲜元素。电影里这俩女性角色的对比和配置，实在是传统到土掉渣。可这，就是很多混出成就的穷小子对于女性，或者对于爱情的全部感知吧。\n\n爱情，对于要挣扎出底层的穷小子来说，从来是奢侈品。因为时间有限，他们来不及、也不愿去细细体味女孩的内心（除非是要走伟大先驱嫪毐那一路的）。他们对女性的感悟停留表面，对爱情的理解粗糙。\n\n因为上帝是公平的，一个底层奋斗挣扎出的人，还要风流倜傥知冷知热，怎么可能？生活又不是网络YY小说。\n\n周星驰就是奋斗出来的穷小子。他接受采访时，谈到曾经的那“一段真挚的感情”，他说自己“运气不好”，那段时间最忙；如果可以重来的话，就不要那么忙了。\n\n可是如果真的重来，我想他还是会那么忙，还是会错过。因为他是周星驰。有些人的命运是注定的，人性也是注定的；周星驰电影里的爱情套路，因而也是注定的。\n\n他电影里的爱情，不是点缀，就是悲催。  \n\n点缀是因为周星驰电影里的主角，就像年少的他一样，小人物有大理想大志向，很忙为了摆脱很穷。他需要美女，却没有时间善待，所以爱情只能成为副线，当男主角功成名就之后，顺其自然抱得美人归。\n\n很多电影里都这样把女性当作人生“奖品”，周星驰的不同在于，他更理解生活的现实，更擅长用荒诞手法表现出来。他知道，无论怎样奋斗成人生赢家，也不可能得到一个内外兼修的美人，有魔鬼身材，又有天使的心。',
    img: '/upload/14836023847336631912190629661375.jpg' } ]
[0mGET / [36m304 [0m40.665 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m0.900 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.979 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.766 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m0.484 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.094 ms - -[0m
==列表===
[0mGET /article/list [36m304 [0m75.533 ms - -[0m
[0mGET /assets/css/bootstrap.css [36m304 [0m1.510 ms - -[0m
[0mGET /assets/css/myapp.css [36m304 [0m1.490 ms - -[0m
[0mGET /assets/js/jquery.js [36m304 [0m1.471 ms - -[0m
[0mGET /assets/js/bootstrap.js [36m304 [0m1.983 ms - -[0m
[0mGET /assets/js/myapp.js [36m304 [0m1.040 ms - -[0m
[0mGET /upload/14835992900846632113401257877779.jpg [36m304 [0m0.708 ms - -[0m
[0mGET /upload/14836013900236631886901862555933.jpg [36m304 [0m0.358 ms - -[0m
[0mGET /upload/14836015203016632036435443952981.jpg [36m304 [0m0.582 ms - -[0m
[0mGET /upload/14836019112762523423166228974104.jpg [36m304 [0m1.490 ms - -[0m
[0mGET /upload/1483602245912BA0E79QV5D9M0095.jpg [36m304 [0m0.962 ms - -[0m
[0mGET /upload/14836020095936631873707723035542.jpg [36m304 [0m0.592 ms - -[0m
[0mGET /upload/1483602190011900x600_BAVIOMN35D9M0095.jpg [36m304 [0m0.443 ms - -[0m
[0mGET /upload/14836023847336631912190629661375.jpg [36m304 [0m0.605 ms - -[0m
